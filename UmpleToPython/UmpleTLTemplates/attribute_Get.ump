class UmpleToJava {
    attribute_Get <<!<</*attribute_Get*/>><<# if (av.numberOfComments() > 0 && av.numberOfRequirements() > 0) { List<Comment> toComment = new ArrayList<Comment>(av.getComments()); toComment.addAll(Requirement.convertToComment(av.getRequirements())); append(realSb, "\n  {0}", Comment.format("Attribute Javadoc", toComment)); } #>><<# if (av.numberOfComments() > 0 && av.numberOfRequirements() == 0) { append(realSb, "\n  {0}", Comment.format("Attribute Javadoc", av.getComments())); } #>><<# if (av.numberOfComments() == 0 && av.numberOfRequirements() > 0) { append(realSb, "\n  {0}", Requirement.format("Attribute Javadoc", av.getRequirements())); } #>><<= umpleSourceFile >>
  public <<=gen.translate("type",av)>> <<= gen.translate("getMethod",av) >>()
  {
    <<# if (customGetPrefixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customGetPrefixCode,gen.translate("getMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customGetPrefixCode, "    ")); } #>>
    <<# for( TraceItem traceItem : traceItems ) #>><<= (traceItem!=null?traceItem.trace(gen, av,"at_g", uClass):"")>>
    return <<=gen.translate("attributeOne",av)>>;
  }!>>
}
