class UmpleToJava {
    attribute_Set <<!<</*attribute_Set*/>>
  public boolean <<= gen.translate("setMethod",av) >>(<<=gen.translate("type",av)>> <<=gen.translate("parameterOne",av)>>)
  {
    boolean wasSet = false;
    <<# if (customSetPrefixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPrefixCode,gen.translate("setMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPrefixCode, "    ")); } #>>
    <<# for( TraceItem traceItem : traceItems ) #>><<= (traceItem!=null&&traceItem.getIsPre()?traceItem.trace(gen, av,"at_s", uClass,gen.translate("parameterOne",av)):"")>>
    <<=gen.translate("associationOne",av)>> = <<=gen.translate("parameterOne",av) >>;
    <<# for( TraceItem traceItem : traceItems ) #>><<= (traceItem!=null&&traceItem.getIsPost()?traceItem.trace(gen, av,"at_s", uClass):"")>>
    wasSet = true;
    <<# if (customSetPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPostfixCode,gen.translate("setMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPostfixCode, "    ")); } #>>
    return wasSet;
  }
!>>
}
