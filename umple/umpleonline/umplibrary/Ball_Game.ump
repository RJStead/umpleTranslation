// UML state machine diagram written in Umple representing a game involving balls
// This example needs maintenance since there are unreachable states and so on
// It is currently excluded from the UmpleOnline official example list

namespace generatedCode;

class Ball_Game {

  ballPosition;
  wallPosition;
  brickPosition;
  paddlePosition;
    
  ball_Status {
    
    NoBall {
      startGame -> Initialized;
    }
    
    Initialized  {
      mouseClick -> Moving;     
    }
    
    BehindPaddle {
      entry / {PlayTune();}
      entry / {decrementBalls(1,bar);}
      noMoreBalls -> End;    
    }
    
    Moving {
      do {moving();}
      [ballPossition==wallPosition] -> HitsWall;
      [ballPosition==paddlePosition] -> HitsPaddle;
      [ballPosition==brickPosition] -> HitsBrick;
      ballOut -> BehindPaddle;
    }
   
    HitsBrick  {
      entry / {playHitSound();}
      entry / {increaseScore(1);}
      exit / {calculateNewDirection();}
      directionUpdated -> Moving;
    }
    
    HitsWall {
      entry / {calculateNewDirection();}
      directionUpdated -> Moving;
    }
    
    HitsPaddle {
      
      entry / {calculateNewDirection();}
      directionUpdated -> Moving; 
    }
    
    End {
      entry / {displayGameOver();}
    }        
  }
}
//$?[End_of_model]$?
// @@@skipcompile - example has missing methods