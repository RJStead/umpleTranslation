//The class Shape contains an abstract
//method, area, as well as a concrete
//method move, which has its implementation
//shared across all subclasses

//Shape is an abstract class, because it
//contains an abstract method
class Shape {
  color;
  Integer x;
  Integer y;
  
  abstract Double area();
  void move() {
    /* implementation */
  }
}

//Both Square and Circle are concrete
//classes as they implement all inherited
//abstract methods
class Square {
  isA Shape;
  Double width;
  Double height;
  
  Double area() {
    return getWidth()*getHeight();
  }
}

class Circle {
  isA Shape;
  Double radius;
  const Double PI = 3.1416;
  
  Double area() {
    return PI*radius*radius;
  }
}

class A {
  Square s;
  Circle c;
  
  void Test() {
    //The method implemented in Shape is
    //used
    s.move();
    c.move();
  
    //The methods implemented in their
    //respective classes are used
    s.area();
    c.area();
  }
}