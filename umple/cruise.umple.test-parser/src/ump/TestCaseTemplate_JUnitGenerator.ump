
class TestCaseJUnitGenerator {
	

	depend java.io.BufferedWriter;
	depend java.io.File;
	depend java.io.FileWriter;
	depend java.io.IOException;
	depend cruise.umple.testparser.TestParser;
	depend cruise.umple.unitGen.jUnit.JUnitGenerator;
	depend cruise.umple.compiler.*; 
	
	
	JUnitGenerator juG = new JUnitGenerator();
	TestParser parser = new TestParser(null, null, null, 0);
	TestModel testModel ;
	String grammarFile;
	File testModelFile;
	StringBuilder code;
	String path;

testsuite <<!<<=classname>>Tests!>>;

@Override
public boolean setModel(UmpleModel model) {
	// TODO Auto-generated method stub
	return false;
}

@Override
public void setCredential() {
	// TODO Auto-generated method stub

}

@Override
public void prepare() {
	grammarFile= "src/mbt_parsing.grammar";
	testModelFile = new File( "src/model1.umpt");
	path = "stc-gen";
	parser.setGrammarFile(grammarFile);
	parser.setTestModelFile(testModelFile);
	parser.prepare();

}

@Override
public void generate() {
	System.out.println("JUnitgenerate::");
			prepare();
			setTestModel(parser.getATestModel());
			//testModel.getTestSuite(0).getTestcases().forEach(action);
			//code.append(juG.getCode(testModel));
			System.out.println(juG.getCode(testModel));
			writeFile();
}

@Override
public void writeFile(TestSuite ts) {
	

}

public void writeFile () 
  {
    // TODO Auto-generated method stub


	File file = new File(path);
	String filename = (testModel.getFile().substring(0,testModel.getFile().length()-4))+"Test.java";
		
	System.out.print(file.getAbsolutePath());
	System.out.print("\n");
	file.mkdirs();

				try {
				BufferedWriter bw = new BufferedWriter(new FileWriter(new File(file.getAbsolutePath(),filename)));
				bw.write(juG.getCode(testModel));
				System.out.println(juG.getCode(testModel));
				bw.flush();
				bw.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
  }

	public static void main (String[] argv)

	  {

	  }

}
