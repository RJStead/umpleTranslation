class Downloader
{
  projectRepo;
  remoteUrl;
  destinationDir;
  projectName;

  public downloadProjectGithub()
  {
  	$zipFile = $this->getDestinationDir() . "/$this->getProjectName.zip"; // Local Zip File Path
	$zipResource = fopen($zipFile, "w");

	// Get The Zip File From Server
	echo("** Downloading project zip...\n");
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, $this->getRemoteUrl());
	curl_setopt($ch, CURLOPT_FAILONERROR, true);
	curl_setopt($ch, CURLOPT_HEADER, 0);
	curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
	curl_setopt($ch, CURLOPT_AUTOREFERER, true);
	curl_setopt($ch, CURLOPT_BINARYTRANSFER,true);
	curl_setopt($ch, CURLOPT_TIMEOUT, 10);
	curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0); 
	curl_setopt($ch, CURLOPT_FILE, $zipResource);
	$page = curl_exec($ch);
	if(!$page) {
	 echo "Error :- ".curl_error($ch);
	}
	curl_close($ch);

	// Extract project zip and save its name
	echo("** Extracting project zip...\n");
    $zip = new ZipArchive;
    $res = $zip->open($zipFile);
    $this->projectName = substr($zip->getNameIndex(0), 0, strlen($zip->getNameIndex(0))-1);

    if($res == TRUE) {
     $zip->extractTo($this->getDestinationDir());
     $zip->close();
    } else {
    	exit("Could not extract project archive!");
    }
  }

  public downloadProjectGoogleCode()
  {
  	echo("** Downloading project...\n");
    $command = 'hg clone ' . $this->getRemoteUrl() . ' ' . $this->getDestinationDir() . $this->getProjectName();
    exec($command);
  }
}