namespace cruise.umplificator;

class StringHelper {

 depend java.util.regex.Pattern;
 depend java.util.regex.Matcher;
 // Use to get the class body from a compilation unit.
 // Needed when the level of refactoring is CLASS.
 // Another option is to parse the declarations in the class without converting them into Umple constructs, however this is not efficient. 
 
   public static String getClassDeclaration(String source){
	Pattern pattern = Pattern.compile("\\s*(public|private)\\s+class\\s+(\\w+)\\s+((extends\\s+\\w+)|(implements\\s+\\w+( ,\\w+)*))?\\s*\\{");
    Matcher matcher = pattern.matcher(source);
    if (matcher.find())
    {
      return matcher.group();
    }
    return "";
   }
   
   public static String getClassBody(String source){ 
	   int classDeclarationIndex = source.indexOf(getClassDeclaration(source));
	   // Eliminate comments outside class	   
	   String content = source.substring(classDeclarationIndex, source.length());
	   String classBody = content.substring(content.indexOf("{")+1, content.lastIndexOf("}"));
	   return classBody;
   }
 
    public static void main(String[] args)
    {
	 System.out.println(getClassDeclaration("//comments  class TestF {a; b; public void A(){int b=4; }}"));
	 System.out.println( getClassBody("//comments  class TestF {a; b; public void A(){int b=4; }}"));
    }

}