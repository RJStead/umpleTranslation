namespace cruise.umplificator.visitor;

class JavaClassVisitor {

 isA ASTVisitor;
 
 depend org.eclipse.jdt.core.dom.ASTVisitor;
 depend org.eclipse.jdt.core.dom.TypeDeclaration;
 depend org.eclipse.jdt.core.dom.EnumDeclaration;
 depend org.eclipse.jdt.core.dom.ImportDeclaration;
 depend org.eclipse.jdt.core.dom.MethodDeclaration;
 depend org.eclipse.jdt.core.dom.FieldDeclaration;
 depend org.eclipse.jdt.core.dom.PackageDeclaration;

 ImportDeclaration [] importDeclarations;
 MethodDeclaration [] methodDeclarations;
 FieldDeclaration [] fieldDeclarations;
 EnumDeclaration [] enumDeclarations;
 
 lazy TypeDeclaration typeDeclaration;
 lazy PackageDeclaration packageDeclaration;
 lazy String name;
 lazy String classBody;
 lazy Boolean isInterface;
 lazy Boolean isEnumType;

  @Override
  public boolean visit(ImportDeclaration node) {
    logger.debug("Visiting ImportDeclarations-"+node.getName());
    importDeclarations.add(node);
    return super.visit(node);
  }
  
  @Override
  public boolean visit(FieldDeclaration node) {
    logger.debug("Visiting FieldDeclarations-"+node.toString());
    fieldDeclarations.add(node);
    return super.visit(node);
  }
  
  @Override
  public boolean visit(MethodDeclaration node) {
    logger.debug("Visiting MethodDeclarations-" +node.getName());
    methodDeclarations.add(node);
    return super.visit(node);
  }
  
  @Override
  public boolean visit(TypeDeclaration node) {
    // Main node to visit
    logger.debug("Visiting TypeDeclarations-" +node.getName());
    name = node.getName().getFullyQualifiedName();
    typeDeclaration = node;
    return true; 
  }
  
  @Override
  public boolean visit (PackageDeclaration node) 
  {
    logger.debug("-Visiting PackageDeclaration-" +node.getName());
    packageDeclaration = node;
    return super.visit(node);
  }
  
  @Override
  public boolean visit (EnumDeclaration node) 
  {
  	logger.debug("Visiting EnumDeclaration-" +node.getName());
    enumDeclarations.add(node);
    return false;
  }

}
 external EnumDeclaration {}
 external TypeDeclaration {}
 external PackageDeclaration {}
 external FieldDeclaration {}
 external MethodDeclaration {}
 external ImportDeclaration {}
 external ASTVisitor {}