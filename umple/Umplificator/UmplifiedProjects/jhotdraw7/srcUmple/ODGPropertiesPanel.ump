/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the Java Umplificator!*/

namespace org.jhotdraw.samples.odg ;

class ODGPropertiesPanel 
{
depend org.jhotdraw.draw.gui.JAttributeSlider;
depend org.jhotdraw.draw.event.FigureAttributeEditorHandler;
depend org.jhotdraw.text.JavaNumberFormatter;
depend java.awt.*;
depend javax.swing.*;
depend org.jhotdraw.draw.*;
depend org.jhotdraw.gui.*;
depend org.jhotdraw.util.*;
depend org.jhotdraw.samples.svg.SVGAttributeKeys.*;
  isA javax.swing.JPanel;

  private ResourceBundleUtil labels = ResourceBundleUtil.getBundle("org.jhotdraw.samples.odg.Labels");
private DrawingEditor editor;
private JAttributeSlider opacitySlider;
private FigureAttributeEditorHandler opacityFieldHandler;
private FigureAttributeEditorHandler opacitySliderHandler;
private FigureAttributeEditorHandler linkFieldHandler;
// Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jhotdraw.draw.gui.JAttributeTextField linkField;
private javax.swing.JLabel linkLabel;
private org.jhotdraw.draw.gui.JAttributeTextField opacityField;
private javax.swing.JLabel opacityLabel;
private org.jhotdraw.gui.JPopupButton opacityPopupButton;
public void setEditor(DrawingEditor editor) {
        this.editor = editor;
        linkFieldHandler.setEditor(editor);
        opacitySliderHandler.setEditor(editor);
        opacityFieldHandler.setEditor(editor);
    }
public void setView(DrawingView view) {
        opacityFieldHandler.setView(view);
        opacitySliderHandler.setView(view);
        linkFieldHandler.setView(view);
    }
/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        linkLabel = new javax.swing.JLabel();
        linkField = new org.jhotdraw.draw.gui.JAttributeTextField();
        opacityLabel = new javax.swing.JLabel();
        opacityField = new org.jhotdraw.draw.gui.JAttributeTextField();
        opacityPopupButton = new org.jhotdraw.gui.JPopupButton();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        setLayout(new java.awt.GridBagLayout());

        linkLabel.setLabelFor(linkField);
        linkLabel.setText(labels.getString("link")); // NOI18N
        add(linkLabel, new java.awt.GridBagConstraints());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(linkField, gridBagConstraints);

        opacityLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jhotdraw/draw/action/images/attributeOpacity.png"))); // NOI18N
        opacityLabel.setToolTipText(labels.getString("opacity")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(opacityLabel, gridBagConstraints);

        opacityField.setColumns(3);
        add(opacityField, new java.awt.GridBagConstraints());

        opacityPopupButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jhotdraw/draw/action/images/popupIcon.png"))); // NOI18N
        add(opacityPopupButton, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

}