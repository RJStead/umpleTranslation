/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the Java Umplificator!*/

namespace org.jhotdraw.draw.locator ;

class RelativeDecoratorLocator 
{
depend org.jhotdraw.draw.*;
depend org.jhotdraw.draw.DecoratedFigure;
depend java.awt.geom.*;
  isA RelativeLocator;

  private boolean isQuadratic;
@Override
    public java.awt.geom.Point2D.Double locate(Figure owner) {
        Rectangle2D.Double r;
        if ((owner instanceof DecoratedFigure) && 
                ((DecoratedFigure) owner).getDecorator() != null) {
            r = ((DecoratedFigure) owner).getDecorator().getBounds();
        } else {
            r = owner.getBounds();
        }
        if (isQuadratic) {
        double side = Math.max(r.width, r.height);
        r.x -= (side - r.width) / 2;
        r.y -= (side - r.height) / 2;
        r.width = r.height = side;
        }
        return new Point2D.Double(
                r.x + r.width * relativeX,
                r.y + r.height * relativeY
                );
    }
static public Locator east() {
        return new RelativeDecoratorLocator(1.0, 0.5);
    }
/**
     * North.
     */
    static public Locator north() {
        return new RelativeDecoratorLocator(0.5, 0.0);
    }
/**
     * West.
     */
    static public Locator west() {
        return new RelativeDecoratorLocator(0.0, 0.5);
    }
/**
     * North east.
     */
    static public Locator northEast() {
        return new RelativeDecoratorLocator(1.0, 0.0);
    }
/**
     * North west.
     */
    static public Locator northWest() {
        return new RelativeDecoratorLocator(0.0, 0.0);
    }
/**
     * South.
     */
    static public Locator south() {
        return new RelativeDecoratorLocator(0.5, 1.0);
    }
/**
     * South east.
     */
    static public Locator southEast() {
        return new RelativeDecoratorLocator(1.0, 1.0);
    }
/**
     * South west.
     */
    static public Locator southWest() {
        return new RelativeDecoratorLocator(0.0, 1.0);
    }
/**
     * Center.
     */
    static public Locator center() {
        return new RelativeDecoratorLocator(0.5, 0.5);
    }

}