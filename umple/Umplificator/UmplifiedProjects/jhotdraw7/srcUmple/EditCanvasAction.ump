/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the Java Umplificator!*/

namespace org.jhotdraw.draw.action ;

class EditCanvasAction 
{
depend java.awt.event.*;
depend java.beans.PropertyChangeListener;
depend java.util.prefs.Preferences;
depend javax.swing.*;
depend org.jhotdraw.app.*;
depend org.jhotdraw.draw.*;
depend org.jhotdraw.util.*;
depend org.jhotdraw.util.prefs.PreferencesUtil;
  isA AbstractDrawingViewAction;

  public final static String ID = "view.editCanvas";
private JFrame frame;
private EditCanvasPanel settingsPanel;
private PropertyChangeListener propertyChangeHandler;
private Application app;
@Override
    public void actionPerformed(ActionEvent e) {
        getFrame().setVisible(true);
    }
@Override protected void updateViewState() {
        if (getView() != null && settingsPanel != null) {
            settingsPanel.setDrawing(getView().getDrawing());
        }
    }
protected Application getApplication() {
        return app;
    }
protected JFrame getFrame() {
        if (frame == null) {
            ResourceBundleUtil labels = ResourceBundleUtil.getBundle("org.jhotdraw.draw.Labels");
            frame = new JFrame();
            frame.setTitle(labels.getString("window.editCanvas.title"));
            frame.setResizable(false);
            settingsPanel = new EditCanvasPanel();
            frame.add(settingsPanel);
            frame.pack();
            Preferences prefs = PreferencesUtil.userNodeForPackage(getClass());
            PreferencesUtil.installFramePrefsHandler(prefs, "canvasSettings", frame);
            getApplication().addWindow(frame, null);
        }
            settingsPanel.setDrawing(getView().getDrawing());
        return frame;
    }

}