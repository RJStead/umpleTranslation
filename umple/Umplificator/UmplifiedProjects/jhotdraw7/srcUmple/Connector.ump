/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the Java Umplificator!*/

namespace org.jhotdraw.draw.connector ;

class Connector 
{
depend org.jhotdraw.draw.*;
depend java.awt.*;
depend java.awt.geom.*;
depend java.io.*;

  /**
     * Finds the start point for the connection.
     */
    public Point2D.Double findStart(ConnectionFigure connection);
/**
     * Finds the end point for the connection.
     */
    public Point2D.Double findEnd(ConnectionFigure connection);
/**
     * Gets the connector's owner.
     */
    public Figure getOwner();
/**
     * Gets the anchor of the connector.
     * This is a point at the center or at the bounds of the figure, where
     * the start or the end point will most likely be attached.
     * The purpose of this method is to give the user a hint, where the 
     * connector will most likely be attached to the owner of the connector.
     */
    public Point2D.Double getAnchor();
/**
     * Gets the bounds of the connector.
     * This usually are the bounds of the Figure which owns the Connector.
     * The bounds can differ from the Figure bounds, if the Connector 
     * connects to a specific region of the Figure.
     */
    public Rectangle2D.Double getBounds();
/**
     * Updates the anchor of the connector.
     * This method is called when the user manually changes the end point of
     * the ConnectionFigure. The Connector uses this as a hint for choosing
     * a new anchor position.
     */
    public void updateAnchor(Point2D.Double p);
/**
     * Tests if a point is contained in the connector.
     */
    public boolean contains(Point2D.Double p);
/**
     * Returns a clone of the Connection.
     */
    public Object clone();
/**
     * Gets the drawing area of the connector.
     */
    public Rectangle2D.Double getDrawingArea();
/** Draws the connector.
     */
    public void draw(Graphics2D g);

}