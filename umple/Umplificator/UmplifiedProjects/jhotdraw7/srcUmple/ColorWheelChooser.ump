/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the Java Umplificator!*/

namespace org.jhotdraw.color ;

class ColorWheelChooser 
{
depend java.awt.*;
depend javax.swing.*;
depend javax.swing.colorchooser.*;
depend javax.swing.event.*;
depend javax.swing.plaf.*;
  isA AbstractColorChooserPanel;

  private JColorWheel colorWheel;
private ColorSliderModel ccModel = new DefaultColorSliderModel(HSBColorSpace.getInstance());
private int updatingChooser;
// Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider brightnessSlider;
/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        brightnessSlider = new javax.swing.JSlider();

        setLayout(new java.awt.BorderLayout());

        brightnessSlider.setMajorTickSpacing(50);
        brightnessSlider.setOrientation(javax.swing.JSlider.VERTICAL);
        brightnessSlider.setPaintTicks(true);
        add(brightnessSlider, java.awt.BorderLayout.EAST);

    }//GEN-END:initComponents
@Override
    protected void buildChooser() {
    }
@Override
    public String getDisplayName() {
        return UIManager.getString("ColorChooser.colorWheel");
    }
@Override
    public javax.swing.Icon getLargeDisplayIcon() {
        return UIManager.getIcon("ColorChooser.colorWheelIcon");
    }
@Override
    public Icon getSmallDisplayIcon() {
        return getLargeDisplayIcon();
    }
@Override
    public void updateChooser() {
        updatingChooser++;
        ccModel.setColor(getColorFromModel());
        updatingChooser--;
    }
public void setColorToModel(Color color) {
        if (updatingChooser == 0) {
        getColorSelectionModel().setSelectedColor(color);
        }
    }

}