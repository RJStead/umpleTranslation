namespace weka.gui.beans;

class ClustererCustomizer
{
  isA BeanCustomizer,CustomizerCloseRequester;
  isA JPanel;
 depend java.awt.BorderLayout;
 depend java.awt.GridLayout;
 depend java.awt.Window;
 depend java.awt.event.ActionEvent;
 depend java.awt.event.ActionListener;
 depend java.beans.PropertyChangeListener;
 depend java.beans.PropertyChangeSupport;
 depend javax.swing.JButton;
 depend javax.swing.JPanel;
 depend weka.gui.GenericObjectEditor;
 depend weka.gui.PropertySheetPanel;
/** 
 * for serialization 
 */
private static final long serialVersionUID=-2035688458149534161L;

private PropertyChangeSupport m_pcSupport=new PropertyChangeSupport(this);

private weka.gui.beans.Clusterer m_dsClusterer;

private PropertySheetPanel m_ClustererEditor=new PropertySheetPanel();

private Window m_parentWindow;

/** 
 * Backup if the user presses cancel 
 */
private weka.clusterers.Clusterer m_backup;

private ModifyListener m_modifyListener;

public ClustererCustomizer(){
  setLayout(new BorderLayout());
  add(m_ClustererEditor,BorderLayout.CENTER);
  JPanel butHolder=new JPanel();
  butHolder.setLayout(new GridLayout(1,2));
  JButton OKBut=new JButton("OK");
  OKBut.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (m_modifyListener != null) {
        m_modifyListener.setModifiedStatus(ClustererCustomizer.this,true);
      }
      m_parentWindow.dispose();
    }
  }
);
  JButton CancelBut=new JButton("Cancel");
  CancelBut.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (m_backup != null) {
        m_dsClusterer.setClusterer(m_backup);
      }
      if (m_modifyListener != null) {
        m_modifyListener.setModifiedStatus(ClustererCustomizer.this,false);
      }
      m_parentWindow.dispose();
    }
  }
);
  butHolder.add(OKBut);
  butHolder.add(CancelBut);
  add(butHolder,BorderLayout.SOUTH);
}

public void actionPerformed(ActionEvent e){
  if (m_modifyListener != null) {
    m_modifyListener.setModifiedStatus(ClustererCustomizer.this,true);
  }
  m_parentWindow.dispose();
}

public void actionPerformed(ActionEvent e){
  if (m_backup != null) {
    m_dsClusterer.setClusterer(m_backup);
  }
  if (m_modifyListener != null) {
    m_modifyListener.setModifiedStatus(ClustererCustomizer.this,false);
  }
  m_parentWindow.dispose();
}

/** 
 * Set the Clusterer object to be edited
 * @param object an <code>Object</code> value
 */
public void setObject(Object object){
  m_dsClusterer=(weka.gui.beans.Clusterer)object;
  try {
    m_backup=(weka.clusterers.Clusterer)GenericObjectEditor.makeCopy(m_dsClusterer.getClusterer());
  }
 catch (  Exception ex) {
  }
  m_ClustererEditor.setTarget(m_dsClusterer.getClusterer());
}

/** 
 * Add a property change listener
 * @param pcl a <code>PropertyChangeListener</code> value
 */
public void addPropertyChangeListener(PropertyChangeListener pcl){
  m_pcSupport.addPropertyChangeListener(pcl);
}

/** 
 * Remove a property change listener
 * @param pcl a <code>PropertyChangeListener</code> value
 */
public void removePropertyChangeListener(PropertyChangeListener pcl){
  m_pcSupport.removePropertyChangeListener(pcl);
}

public void setParentWindow(Window parent){
  m_parentWindow=parent;
}

@Override public void setModifiedListener(ModifyListener l){
  m_modifyListener=l;
}
}
