namespace weka.attributeSelection;

class AbstractSearchTest
{
  isA AbstractAttributeSelectionTest;
 depend weka.core.CheckGOE;
 depend weka.core.CheckOptionHandler;
 depend weka.core.OptionHandler;
 depend weka.core.CheckScheme.PostProcessor;
/** 
 * Constructs the <code>AbstractSearchTest</code>. Called by subclasses.
 * @param name the name of the test class
 */
public AbstractSearchTest(String name){
  super(name);
}

/** 
 * configures the CheckAttributeSelection instance used throughout the tests
 * @return	the fully configured CheckAttributeSelection instance used for testing
 */
protected CheckAttributeSelection getTester(){
  CheckAttributeSelection result;
  result=super.getTester();
  result.setTestEvaluator(false);
  return result;
}

/** 
 * Configures the CheckOptionHandler uses for testing the optionhandling. Sets the scheme to test.
 * @return	the fully configured CheckOptionHandler
 */
protected CheckOptionHandler getOptionTester(){
  CheckOptionHandler result;
  result=super.getOptionTester();
  if (getSearch() instanceof OptionHandler)   result.setOptionHandler((OptionHandler)getSearch());
  return result;
}

/** 
 * Configures the CheckGOE used for testing GOE stuff.
 * @return	the fully configured CheckGOE
 */
protected CheckGOE getGOETester(){
  CheckGOE result;
  result=super.getGOETester();
  result.setObject(getSearch());
  return result;
}
}
