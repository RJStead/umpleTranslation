namespace weka.filters.unsupervised.attribute;

class RemoveTest
{
  isA AbstractFilterTest;
 depend weka.core.Instances;
 depend weka.filters.AbstractFilterTest;
 depend weka.filters.Filter;
 depend junit.framework.Test;
 depend junit.framework.TestSuite;
public RemoveTest(String name){
  super(name);
}

/** 
 * Creates a default Remove 
 */
public Filter getFilter(){
  return getFilter("1-3");
}

/** 
 * Creates a specialized Remove 
 */
public Filter getFilter(String rangelist){
  Remove af=new Remove();
  af.setAttributeIndices(rangelist);
  return af;
}

public void testTypical(){
  m_Filter=getFilter("1,2");
  ((Remove)m_Filter).setInvertSelection(true);
  Instances result=useFilter();
  assertEquals(2,result.numAttributes());
  assertEquals(m_Instances.attribute(0).name(),result.attribute(0).name());
  assertEquals(m_Instances.attribute(1).name(),result.attribute(1).name());
}

public void testTypical2(){
  m_Filter=getFilter("3-4");
  ((Remove)m_Filter).setInvertSelection(true);
  Instances result=useFilter();
  assertEquals(2,result.numAttributes());
  assertEquals(m_Instances.attribute(2).name(),result.attribute(0).name());
  assertEquals(m_Instances.attribute(3).name(),result.attribute(1).name());
}

public void testNonInverted(){
  m_Filter=getFilter("1,2");
  ((Remove)m_Filter).setInvertSelection(false);
  Instances result=useFilter();
  assertEquals(m_Instances.numAttributes() - 2,result.numAttributes());
  assertEquals(m_Instances.attribute(2).name(),result.attribute(0).name());
  assertEquals(m_Instances.attribute(3).name(),result.attribute(1).name());
}

public void testNonInverted2(){
  m_Filter=getFilter("first-3");
  ((Remove)m_Filter).setInvertSelection(false);
  Instances result=useFilter();
  assertEquals(m_Instances.numAttributes() - 3,result.numAttributes());
  assertEquals(m_Instances.attribute(3).name(),result.attribute(0).name());
}

public static Test suite(){
  return new TestSuite(RemoveTest.class);
}

public static void main(String[] args){
  junit.textui.TestRunner.run(suite());
}
}
