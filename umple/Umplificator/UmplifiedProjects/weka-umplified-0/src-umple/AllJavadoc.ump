namespace weka.core;

class AllJavadoc
{
  isA Javadoc;
 depend java.util.HashSet;
 depend java.util.Vector;
/** 
 * contains all the 
 */
protected static Vector<Javadoc> m_Javadocs;

/** 
 * sets the classname of the class to generate the Javadoc for
 * @param value the new classname
 */
@Override public void setClassname(String value){
  super.setClassname(value);
  for (int i=0; i < m_Javadocs.size(); i++) {
    m_Javadocs.get(i).setClassname(value);
  }
}

/** 
 * sets whether to prefix the Javadoc with "*"
 * @param value true if stars are to be used
 */
@Override public void setUseStars(boolean value){
  super.setUseStars(value);
  for (int i=0; i < m_Javadocs.size(); i++) {
    m_Javadocs.get(i).setUseStars(value);
  }
}

/** 
 * sets whether to suppress output in the console
 * @param value true if output is to be suppressed
 */
@Override public void setSilent(boolean value){
  super.setSilent(value);
  for (int i=0; i < m_Javadocs.size(); i++) {
    m_Javadocs.get(i).setSilent(value);
  }
}

/** 
 * generates and returns the Javadoc for the specified start/end tag pair.
 * @param index the index in the start/end tag array
 * @return the generated Javadoc
 * @throws Exception in case the generation fails
 */
@Override protected String generateJavadoc(int index) throws Exception {
  throw new Exception("Not used!");
}

/** 
 * updates the Javadoc in the given source code, using all the found Javadoc updaters.
 * @param content the source code
 * @return the updated source code
 * @throws Exception in case the generation fails
 */
@Override protected String updateJavadoc(String content) throws Exception {
  String result;
  int i;
  result=content;
  for (i=0; i < m_Javadocs.size(); i++) {
    result=m_Javadocs.get(i).updateJavadoc(result);
  }
  return result;
}

/** 
 * Returns the revision string.
 * @return the revision
 */
@Override public String getRevision(){
  return RevisionUtils.extract("$Revision: 10203 $");
}

/** 
 * Parses the given commandline parameters and generates the Javadoc.
 * @param args the commandline parameters for the object
 */
public static void main(String[] args){
  runJavadoc(new AllJavadoc(),args);
}
}
