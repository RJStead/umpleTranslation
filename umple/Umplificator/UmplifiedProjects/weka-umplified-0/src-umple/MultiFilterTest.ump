namespace weka.filters;

class MultiFilterTest
{
  isA AbstractFilterTest;
 depend weka.core.Instances;
 depend weka.filters.unsupervised.attribute.Add;
 depend weka.filters.unsupervised.attribute.AddExpression;
 depend weka.filters.unsupervised.attribute.Center;
 depend weka.filters.unsupervised.attribute.ReplaceMissingValues;
 depend junit.framework.Test;
 depend junit.framework.TestSuite;
public MultiFilterTest(String name){
  super(name);
}

/** 
 * Creates a default MultiFilter 
 */
public Filter getFilter(){
  return new MultiFilter();
}

/** 
 * Creates a configured MultiFilter 
 */
public Filter getConfiguredFilter(){
  MultiFilter result=new MultiFilter();
  Filter[] filters=new Filter[2];
  filters[0]=new Add();
  ((Add)filters[0]).setAttributeIndex("last");
  filters[1]=new AddExpression();
  ((AddExpression)filters[1]).setExpression("a3+a6");
  result.setFilters(filters);
  return result;
}

/** 
 * Creates a configured MultiFilter (variant) 
 */
public Filter getConfiguredFilterVariant(){
  MultiFilter result=new MultiFilter();
  Filter[] filters=new Filter[2];
  filters[0]=new ReplaceMissingValues();
  filters[1]=new Center();
  result.setFilters(filters);
  return result;
}

public void testDefault(){
  Instances result=useFilter();
  assertEquals(m_Instances.numAttributes(),result.numAttributes());
  assertEquals(m_Instances.numInstances(),result.numInstances());
}

/** 
 * tests Add + AddExpression filter
 */
public void testConfigured(){
  m_Filter=getConfiguredFilter();
  Instances result=useFilter();
  assertEquals(m_Instances.numAttributes() + 2,result.numAttributes());
  assertEquals(m_Instances.numInstances(),result.numInstances());
}

/** 
 * tests ReplaceMissingValues + Center filter
 */
public void testConfiguredVariant(){
  m_Filter=getConfiguredFilterVariant();
  Instances result=useFilter();
  assertEquals(m_Instances.numAttributes(),result.numAttributes());
  assertEquals(m_Instances.numInstances(),result.numInstances());
}

public static Test suite(){
  return new TestSuite(MultiFilterTest.class);
}

public static void main(String[] args){
  junit.textui.TestRunner.run(suite());
}
}
