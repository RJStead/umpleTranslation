namespace weka.experiment;

class OutputZipper
{
  isA RevisionHandler;
 depend java.io.DataOutputStream;
 depend java.io.File;
 depend java.io.FileOutputStream;
 depend java.util.zip.GZIPOutputStream;
 depend java.util.zip.ZipEntry;
 depend java.util.zip.ZipOutputStream;
 depend weka.core.RevisionHandler;
 depend weka.core.RevisionUtils;
File m_destination;

DataOutputStream m_zipOut=null;

ZipOutputStream m_zs=null;

/** 
 * Constructor.
 * @param destination a destination file or directory
 * @throws Exception if something goes wrong.
 */
public OutputZipper(File destination) throws Exception {
  m_destination=destination;
  if (!m_destination.isDirectory()) {
    m_zs=new ZipOutputStream(new FileOutputStream(m_destination));
    m_zipOut=new DataOutputStream(m_zs);
  }
}

/** 
 * Saves a string to either an individual gzipped file or as an entry in a zip file.
 * @param outString the output string to save
 * @param name the name of the file/entry to save it to
 * @throws Exception if something goes wrong
 */
public void zipit(String outString,String name) throws Exception {
  File saveFile;
  ZipEntry ze;
  if (m_zipOut == null) {
    saveFile=new File(m_destination,name + ".gz");
    DataOutputStream dout=new DataOutputStream(new GZIPOutputStream(new FileOutputStream(saveFile)));
    dout.writeBytes(outString);
    dout.close();
  }
 else {
    ze=new ZipEntry(name);
    m_zs.putNextEntry(ze);
    m_zipOut.writeBytes(outString);
    m_zs.closeEntry();
  }
}

/** 
 * Closes the zip file.
 * @throws Exception if something goes wrong
 */
public void finished() throws Exception {
  if (m_zipOut != null) {
    m_zipOut.close();
  }
}

/** 
 * Returns the revision string.
 * @return		the revision
 */
public String getRevision(){
  return RevisionUtils.extract("$Revision: 8034 $");
}

/** 
 * Main method for testing this class
 */
public static void main(String[] args){
  try {
    File testF=new File(new File(System.getProperty("user.dir")),"testOut.zip");
    OutputZipper oz=new OutputZipper(testF);
    oz.zipit("Here is some test text to be zipped","testzip");
    oz.zipit("Here is a second entry to be zipped","testzip2");
    oz.finished();
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    System.err.println(ex.getMessage());
  }
}
}
