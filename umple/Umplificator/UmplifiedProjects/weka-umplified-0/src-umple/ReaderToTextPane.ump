namespace weka.gui;

class ReaderToTextPane
{
  isA Thread;
 depend java.awt.Color;
 depend java.io.LineNumberReader;
 depend java.io.Reader;
 depend javax.swing.JTextPane;
 depend javax.swing.text.Style;
 depend javax.swing.text.StyleConstants;
 depend javax.swing.text.StyleContext;
 depend javax.swing.text.StyledDocument;
/** 
 * The reader being monitored. 
 */
protected LineNumberReader m_Input;

/** 
 * The output text component. 
 */
protected JTextPane m_Output;

/** 
 * the color to use. 
 */
protected Color m_Color;

/** 
 * Sets up the thread. Using black as color for displaying the text.
 * @param input 	the Reader to monitor
 * @param output 	the TextArea to send output to
 */
public ReaderToTextPane(Reader input,JTextPane output){
  this(input,output,Color.BLACK);
}

/** 
 * Sets up the thread.
 * @param input 	the Reader to monitor
 * @param output 	the TextArea to send output to
 * @param color	the color to use
 */
public ReaderToTextPane(Reader input,JTextPane output,Color color){
  StyledDocument doc;
  Style style;
  setDaemon(true);
  m_Color=color;
  m_Input=new LineNumberReader(input);
  m_Output=output;
  doc=m_Output.getStyledDocument();
  style=StyleContext.getDefaultStyleContext().getStyle(StyleContext.DEFAULT_STYLE);
  style=doc.addStyle(getStyleName(),style);
  StyleConstants.setFontFamily(style,"monospaced");
  StyleConstants.setForeground(style,m_Color);
}

/** 
 * Returns the color in use.
 * @return		the color
 */
public Color getColor(){
  return m_Color;
}

/** 
 * Returns the style name.
 * @return		the style name
 */
protected String getStyleName(){
  return "" + m_Color.hashCode();
}

/** 
 * Sit here listening for lines of input and appending them straight to the text component.
 */
public void run(){
  while (true) {
    try {
      StyledDocument doc=m_Output.getStyledDocument();
      doc.insertString(doc.getLength(),m_Input.readLine() + '\n',doc.getStyle(getStyleName()));
      m_Output.setCaretPosition(doc.getLength());
    }
 catch (    Exception ex) {
      try {
        sleep(100);
      }
 catch (      Exception e) {
      }
    }
  }
}
}
