namespace weka.core.pmml.jaxbbindings;

class Coefficients
{
 depend java.math.BigInteger;
 depend java.util.ArrayList;
 depend java.util.List;
 depend javax.xml.bind.annotation.XmlAccessType;
 depend javax.xml.bind.annotation.XmlAccessorType;
 depend javax.xml.bind.annotation.XmlAttribute;
 depend javax.xml.bind.annotation.XmlElement;
 depend javax.xml.bind.annotation.XmlRootElement;
 depend javax.xml.bind.annotation.XmlType;
@XmlElement(name="Extension",namespace="http://www.dmg.org/PMML-4_1",required=true) protected List<Extension> extension;

@XmlElement(name="Coefficient",namespace="http://www.dmg.org/PMML-4_1",required=true) protected List<Coefficient> coefficient;

@XmlAttribute protected Double absoluteValue;

@XmlAttribute protected BigInteger numberOfCoefficients;

/** 
 * Gets the value of the extension property. <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the extension property. <p> For example, to add a new item, do as follows: <pre> getExtension().add(newItem); </pre> <p> Objects of the following type(s) are allowed in the list {@link Extension }
 */
public List<Extension> getExtension(){
  if (extension == null) {
    extension=new ArrayList<Extension>();
  }
  return this.extension;
}

/** 
 * Gets the value of the coefficient property. <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the coefficient property. <p> For example, to add a new item, do as follows: <pre> getCoefficient().add(newItem); </pre> <p> Objects of the following type(s) are allowed in the list {@link Coefficient }
 */
public List<Coefficient> getCoefficient(){
  if (coefficient == null) {
    coefficient=new ArrayList<Coefficient>();
  }
  return this.coefficient;
}

/** 
 * Gets the value of the absoluteValue property.
 * @return possible object is {@link Double }
 */
public double getAbsoluteValue(){
  if (absoluteValue == null) {
    return 0.0D;
  }
 else {
    return absoluteValue;
  }
}

/** 
 * Sets the value of the absoluteValue property.
 * @param value allowed object is {@link Double }
 */
public void setAbsoluteValue(Double value){
  this.absoluteValue=value;
}

/** 
 * Gets the value of the numberOfCoefficients property.
 * @return possible object is {@link BigInteger }
 */
public BigInteger getNumberOfCoefficients(){
  return numberOfCoefficients;
}

/** 
 * Sets the value of the numberOfCoefficients property.
 * @param value allowed object is {@link BigInteger }
 */
public void setNumberOfCoefficients(BigInteger value){
  this.numberOfCoefficients=value;
}
}
