namespace weka.filters.unsupervised.attribute;

class KernelFilterTest
{
  isA AbstractFilterTest;
 depend weka.classifiers.meta.FilteredClassifier;
 depend weka.core.Attribute;
 depend weka.core.Instances;
 depend weka.core.TestInstances;
 depend weka.filters.AbstractFilterTest;
 depend weka.filters.Filter;
 depend junit.framework.Test;
 depend junit.framework.TestSuite;
public KernelFilterTest(String name){
  super(name);
}

/** 
 * Creates a default KernelFilter 
 */
public Filter getFilter(){
  return new KernelFilter();
}

/** 
 * returns the configured FilteredClassifier. Since the base classifier is determined heuristically, derived tests might need to adjust it.
 * @return the configured FilteredClassifier
 */
protected FilteredClassifier getFilteredClassifier(){
  FilteredClassifier result;
  result=new FilteredClassifier();
  result.setFilter(getFilter());
  result.setClassifier(new weka.classifiers.trees.J48());
  return result;
}

/** 
 * returns data generated for the FilteredClassifier test
 * @return		the dataset for the FilteredClassifier
 * @throws Exception	if generation of data fails
 */
protected Instances getFilteredClassifierData() throws Exception {
  TestInstances test;
  Instances result;
  test=TestInstances.forCapabilities(m_FilteredClassifier.getCapabilities());
  test.setClassIndex(TestInstances.CLASS_IS_LAST);
  result=test.generate();
  return result;
}

/** 
 * Called by JUnit before each test method. This implementation creates the default filter to test and loads a test set of Instances.
 * @throws Exception if an error occurs reading the example instances.
 */
protected void setUp() throws Exception {
  super.setUp();
  TestInstances test=new TestInstances();
  test.setNumNominal(0);
  test.setNumNumeric(2);
  test.setClassType(Attribute.NUMERIC);
  m_Instances=test.generate();
}

/** 
 * performs a typical test
 */
public void testTypical(){
  Instances icopy=new Instances(m_Instances);
  m_Filter=getFilter();
  Instances result=useFilter();
  assertEquals(result.numAttributes(),icopy.numInstances() + 1);
}

public static Test suite(){
  return new TestSuite(KernelFilterTest.class);
}

public static void main(String[] args){
  junit.textui.TestRunner.run(suite());
}
}
