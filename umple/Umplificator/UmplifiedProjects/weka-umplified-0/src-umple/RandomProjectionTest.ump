namespace weka.filters.unsupervised.attribute;

class RandomProjectionTest
{
  isA AbstractFilterTest;
 depend weka.core.Instances;
 depend weka.core.SelectedTag;
 depend weka.filters.AbstractFilterTest;
 depend weka.filters.Filter;
 depend junit.framework.Test;
 depend junit.framework.TestSuite;
public RandomProjectionTest(String name){
  super(name);
}

/** 
 * Need to remove non-nominal attributes, set class index 
 */
protected void setUp() throws Exception {
  super.setUp();
  m_Instances.setClassIndex(1);
}

/** 
 * Creates a default RandomProjection 
 */
public Filter getFilter(){
  return getFilter(new RandomProjection().getNumberOfAttributes());
}

/** 
 * Creates a RandomProjection with the number of attributes 
 */
protected Filter getFilter(int numAtts){
  RandomProjection f=new RandomProjection();
  f.setNumberOfAttributes(numAtts);
  return f;
}

/** 
 * performs some checks on the given result
 * @param result the instances to compare against original dataset
 */
protected void checkResult(Instances result){
  assertEquals(((RandomProjection)m_Filter).getNumberOfAttributes() + 1,result.numAttributes());
  assertEquals(m_Instances.numInstances(),result.numInstances());
}

/** 
 * tests the given distribution type
 * @param type the distribution type to use
 * @see RandomProjection#TAGS_DSTRS_TYPE
 */
protected void checkDistributionType(int type){
  m_Filter=getFilter();
  ((RandomProjection)m_Filter).setDistribution(new SelectedTag(type,RandomProjection.TAGS_DSTRS_TYPE));
  Instances result=useFilter();
  checkResult(result);
}

public void testSparse1(){
  checkDistributionType(RandomProjection.SPARSE1);
}

public void testSparse2(){
  checkDistributionType(RandomProjection.SPARSE2);
}

public void testGaussian(){
  checkDistributionType(RandomProjection.GAUSSIAN);
}

public void testNumberOfAttributes(){
  m_Filter=getFilter(5);
  Instances result=useFilter();
  checkResult(result);
}

public static Test suite(){
  return new TestSuite(RandomProjectionTest.class);
}

public static void main(String[] args){
  junit.textui.TestRunner.run(suite());
}
}
