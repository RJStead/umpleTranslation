namespace weka.gui.visualize;

class VisualizePanelEvent
{
 depend java.util.ArrayList;
 depend weka.core.Instances;
/** 
 * No longer used 
 */
public static int NONE=0;

public static int RECTANGLE=1;

public static int OVAL=2;

public static int POLYGON=3;

public static int LINE=4;

public static int VLINE=5;

public static int HLINE=6;

/** 
 * Contains FastVectors, each one containing the points for an object. 
 */
private final ArrayList<ArrayList<Double>> m_values;

/** 
 * The instances that fall inside the shapes described in m_values. 
 */
private final Instances m_inst;

/** 
 * The instances that fall outside the shapes described in m_values. 
 */
private final Instances m_inst2;

/** 
 * The attribute along the x axis. 
 */
private final int m_attrib1;

/** 
 * The attribute along the y axis. 
 */
private final int m_attrib2;

/** 
 * This constructor creates the event with all the parameters set.
 * @param ar The list of shapes.
 * @param i The instances that lie in these shapes.
 * @param i2 The instances that lie outside these shapes.
 * @param at1 The attribute that was along the x axis.
 * @param at2 The attribute that was along the y axis.
 */
public VisualizePanelEvent(ArrayList<ArrayList<Double>> ar,Instances i,Instances i2,int at1,int at2){
  m_values=ar;
  m_inst=i;
  m_inst2=i2;
  m_attrib1=at1;
  m_attrib2=at2;
}

/** 
 * @return The list of shapes.
 */
public ArrayList<ArrayList<Double>> getValues(){
  return m_values;
}

/** 
 * @return The instances that lie in the shapes.
 */
public Instances getInstances1(){
  return m_inst;
}

/** 
 * @return The instances that lie outside the shapes.
 */
public Instances getInstances2(){
  return m_inst2;
}

/** 
 * @return The x axis attribute.
 */
public int getAttribute1(){
  return m_attrib1;
}

/** 
 * @return The y axis attribute.
 */
public int getAttribute2(){
  return m_attrib2;
}
}
