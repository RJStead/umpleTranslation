namespace weka.core.stopwords;

class MultiStopwordsTest
{
  isA AbstractStopwordsTest;
 depend java.io.File;
 depend junit.framework.Test;
 depend junit.framework.TestSuite;
 depend junit.textui.TestRunner;
/** 
 * Constructs the test.
 * @param name the name of the test
 */
public MultiStopwordsTest(String name){
  super(name);
}

/** 
 * Used to create an instance of a specific stopwords scheme.
 * @return a suitably configured <code>StopwordsHandler</code> value
 */
@Override public StopwordsHandler getStopwords(){
  MultiStopwords result;
  StopwordsHandler[] handlers;
  result=new MultiStopwords();
  handlers=new StopwordsHandler[3];
  handlers[0]=new Rainbow();
  handlers[1]=new WordsFromFile();
  ((WordsFromFile)handlers[1]).setStopwords(new File(getTmpDirectory() + File.separator + "WordsFromFile.txt"));
  handlers[2]=new RegExpFromFile();
  ((RegExpFromFile)handlers[2]).setStopwords(new File(getTmpDirectory() + File.separator + "RegExpFromFile.txt"));
  result.setStopwords(handlers);
  return result;
}

/** 
 * Called by JUnit before each test method.
 * @exception Exception if an error occurs reading the example instances.
 */
@Override protected void setUp() throws Exception {
  super.setUp();
  copyResourceToTmp("WordsFromFile.txt");
  copyResourceToTmp("RegExpFromFile.txt");
}

/** 
 * Called by JUnit after each test method.
 */
@Override protected void tearDown(){
  deleteFileFromTmp("WordsFromFile.txt");
  deleteFileFromTmp("RegExpFromFile.txt");
  super.tearDown();
}

public static Test suite(){
  return new TestSuite(MultiStopwordsTest.class);
}

public static void main(String[] args){
  TestRunner.run(suite());
}
}
