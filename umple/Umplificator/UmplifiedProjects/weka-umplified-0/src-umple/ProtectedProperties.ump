namespace weka.core;

class ProtectedProperties
{
  isA RevisionHandler;
  isA Properties;
 depend java.io.InputStream;
 depend java.util.Enumeration;
 depend java.util.Map;
 depend java.util.Properties;
/** 
 * for serialization 
 */
private static final long serialVersionUID=3876658672657323985L;

/** 
 * the properties need to be open during construction of the object 
 */
private boolean closed=false;

/** 
 * Creates a set of protected properties from a set of normal ones.
 * @param props the properties to be stored and protected.
 */
public ProtectedProperties(Properties props){
  Enumeration<?> propEnum=props.propertyNames();
  while (propEnum.hasMoreElements()) {
    String propName=(String)propEnum.nextElement();
    String propValue=props.getProperty(propName);
    super.setProperty(propName,propValue);
  }
  closed=true;
}

/** 
 * Overrides a method to prevent the properties from being modified.
 * @return never returns without throwing an exception.
 * @throws UnsupportedOperationException always.
 */
@Override public Object setProperty(String key,String value){
  if (closed) {
    throw new UnsupportedOperationException("ProtectedProperties cannot be modified!");
  }
 else {
    return super.setProperty(key,value);
  }
}

/** 
 * Overrides a method to prevent the properties from being modified.
 * @throws UnsupportedOperationException always.
 */
@Override public void load(InputStream inStream){
  throw new UnsupportedOperationException("ProtectedProperties cannot be modified!");
}

/** 
 * Overrides a method to prevent the properties from being modified.
 * @throws UnsupportedOperationException always.
 */
@Override public void clear(){
  throw new UnsupportedOperationException("ProtectedProperties cannot be modified!");
}

/** 
 * Overrides a method to prevent the properties from being modified.
 * @return never returns without throwing an exception.
 * @throws UnsupportedOperationException always.
 */
@Override public Object put(Object key,Object value){
  if (closed) {
    throw new UnsupportedOperationException("ProtectedProperties cannot be modified!");
  }
 else {
    return super.put(key,value);
  }
}

/** 
 * Overrides a method to prevent the properties from being modified.
 * @throws UnsupportedOperationException always.
 */
@Override public void putAll(Map<? extends Object,? extends Object> t){
  throw new UnsupportedOperationException("ProtectedProperties cannot be modified!");
}

/** 
 * Overrides a method to prevent the properties from being modified.
 * @return never returns without throwing an exception.
 * @throws UnsupportedOperationException always.
 */
@Override public Object remove(Object key){
  throw new UnsupportedOperationException("ProtectedProperties cannot be modified!");
}

/** 
 * Returns the revision string.
 * @return the revision
 */
@Override public String getRevision(){
  return RevisionUtils.extract("$Revision: 10203 $");
}
}
