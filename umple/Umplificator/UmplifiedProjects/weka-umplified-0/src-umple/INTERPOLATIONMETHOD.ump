
top INTERPOLATIONMETHOD
{
/** 
 * <p>Java class for INTERPOLATION-METHOD. <p>The following schema fragment specifies the expected content contained within this class. <p> <pre> &lt;simpleType name="INTERPOLATION-METHOD"> &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"> &lt;enumeration value="none"/> &lt;enumeration value="linear"/> &lt;enumeration value="exponentialSpline"/> &lt;enumeration value="cubicSpline"/> &lt;/restriction> &lt;/simpleType> </pre>
 */
@XmlEnum public enum INTERPOLATIONMETHOD {@XmlEnumValue("cubicSpline") CUBIC_SPLINE("cubicSpline"), @XmlEnumValue("exponentialSpline") EXPONENTIAL_SPLINE("exponentialSpline"), @XmlEnumValue("linear") LINEAR("linear"), @XmlEnumValue("none") NONE("none"); private final String value;
INTERPOLATIONMETHOD(String v){
  value=v;
}
public String value(){
  return value;
}
public static INTERPOLATIONMETHOD fromValue(String v){
  for (  INTERPOLATIONMETHOD c : INTERPOLATIONMETHOD.values()) {
    if (c.value.equals(v)) {
      return c;
    }
  }
  throw new IllegalArgumentException(v.toString());
}
}
}