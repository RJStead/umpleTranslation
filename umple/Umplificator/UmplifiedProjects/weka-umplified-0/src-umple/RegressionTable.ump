namespace weka.core.pmml.jaxbbindings;

class RegressionTable
{
 depend java.util.ArrayList;
 depend java.util.List;
 depend javax.xml.bind.annotation.XmlAccessType;
 depend javax.xml.bind.annotation.XmlAccessorType;
 depend javax.xml.bind.annotation.XmlAttribute;
 depend javax.xml.bind.annotation.XmlElement;
 depend javax.xml.bind.annotation.XmlRootElement;
 depend javax.xml.bind.annotation.XmlType;
@XmlElement(name="Extension",namespace="http://www.dmg.org/PMML-4_1",required=true) protected List<Extension> extension;

@XmlElement(name="NumericPredictor",namespace="http://www.dmg.org/PMML-4_1",required=true) protected List<NumericPredictor> numericPredictor;

@XmlElement(name="CategoricalPredictor",namespace="http://www.dmg.org/PMML-4_1",required=true) protected List<CategoricalPredictor> categoricalPredictor;

@XmlElement(name="PredictorTerm",namespace="http://www.dmg.org/PMML-4_1",required=true) protected List<PredictorTerm> predictorTerm;

@XmlAttribute(required=true) protected double intercept;

@XmlAttribute protected String targetCategory;

public RegressionTable(){
}

public RegressionTable(String targetCategory){
  this.targetCategory=targetCategory;
}

/** 
 * Gets the value of the extension property. <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the extension property. <p> For example, to add a new item, do as follows: <pre> getExtension().add(newItem); </pre> <p> Objects of the following type(s) are allowed in the list {@link Extension }
 */
public List<Extension> getExtension(){
  if (extension == null) {
    extension=new ArrayList<Extension>();
  }
  return this.extension;
}

/** 
 * Gets the value of the numericPredictor property. <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the numericPredictor property. <p> For example, to add a new item, do as follows: <pre> getNumericPredictor().add(newItem); </pre> <p> Objects of the following type(s) are allowed in the list {@link NumericPredictor }
 */
public List<NumericPredictor> getNumericPredictors(){
  if (numericPredictor == null) {
    numericPredictor=new ArrayList<NumericPredictor>();
  }
  return this.numericPredictor;
}

public void addNumericPredictor(NumericPredictor predictor){
  if (numericPredictor == null) {
    numericPredictor=new ArrayList<NumericPredictor>();
  }
  this.numericPredictor.add(predictor);
}

/** 
 * Gets the value of the categoricalPredictor property. <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the categoricalPredictor property. <p> For example, to add a new item, do as follows: <pre> getCategoricalPredictor().add(newItem); </pre> <p> Objects of the following type(s) are allowed in the list {@link CategoricalPredictor }
 */
public List<CategoricalPredictor> getCategoricalPredictor(){
  if (categoricalPredictor == null) {
    categoricalPredictor=new ArrayList<CategoricalPredictor>();
  }
  return this.categoricalPredictor;
}

/** 
 * Gets the value of the predictorTerm property. <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the predictorTerm property. <p> For example, to add a new item, do as follows: <pre> getPredictorTerm().add(newItem); </pre> <p> Objects of the following type(s) are allowed in the list {@link PredictorTerm }
 */
public List<PredictorTerm> getPredictorTerm(){
  if (predictorTerm == null) {
    predictorTerm=new ArrayList<PredictorTerm>();
  }
  return this.predictorTerm;
}

/** 
 * Gets the value of the intercept property.
 */
public double getIntercept(){
  return intercept;
}

/** 
 * Sets the value of the intercept property.
 */
public void setIntercept(double value){
  this.intercept=value;
}

/** 
 * Gets the value of the targetCategory property.
 * @return possible object is {@link String }
 */
public String getTargetCategory(){
  return targetCategory;
}

/** 
 * Sets the value of the targetCategory property.
 * @param value allowed object is {@link String }
 */
public void setTargetCategory(String value){
  this.targetCategory=value;
}
}
