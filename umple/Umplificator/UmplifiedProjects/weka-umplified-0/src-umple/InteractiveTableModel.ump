namespace weka.gui.beans;

class InteractiveTableModel
{
  isA AbstractTableModel;
 depend java.util.ArrayList;
 depend java.util.List;
 depend javax.swing.table.AbstractTableModel;
/** 
 * For serialization
 */
private static final long serialVersionUID=-5113873323690309667L;

/** 
 * Index of the hidden column 
 */
public int m_hidden_index;

/** 
 * The names of the columns 
 */
protected String[] m_columnNames;

/** 
 * Holds the data 
 */
protected List<List<String>> m_dataVector;

/** 
 * Constructor
 * @param columnNames the names of the columns
 */
public InteractiveTableModel(String[] columnNames){
  m_columnNames=columnNames;
  m_dataVector=new ArrayList<List<String>>();
  m_hidden_index=columnNames.length - 1;
}

@Override public String getColumnName(int column){
  return m_columnNames[column];
}

@Override public boolean isCellEditable(int row,int column){
  if (column == m_hidden_index) {
    return false;
  }
  return true;
}

@Override public Class<?> getColumnClass(int column){
  return String.class;
}

@Override public Object getValueAt(int row,int column){
  if (column >= m_columnNames.length) {
    return new Object();
  }
  List<String> rowData=m_dataVector.get(row);
  return rowData.get(column);
}

@Override public void setValueAt(Object value,int row,int column){
  if (column >= m_columnNames.length) {
    System.err.println("Invalid index");
  }
  List<String> rowData=m_dataVector.get(row);
  rowData.set(column,value.toString());
  fireTableCellUpdated(row,column);
}

@Override public int getRowCount(){
  return m_dataVector.size();
}

@Override public int getColumnCount(){
  return m_columnNames.length;
}

/** 
 * Returns true if the model has an empty row
 * @return true if the model has an empty row
 */
public boolean hasEmptyRow(){
  if (m_dataVector.size() == 0) {
    return false;
  }
  List<String> dataRow=m_dataVector.get(m_dataVector.size() - 1);
  for (  String s : dataRow) {
    if (s.length() != 0) {
      return false;
    }
  }
  return true;
}

/** 
 * Adds an empty row to the model
 */
public void addEmptyRow(){
  ArrayList<String> empty=new ArrayList<String>();
  for (int i=0; i < m_columnNames.length; i++) {
    empty.add("");
  }
  m_dataVector.add(empty);
  fireTableRowsInserted(m_dataVector.size() - 1,m_dataVector.size() - 1);
}
}
