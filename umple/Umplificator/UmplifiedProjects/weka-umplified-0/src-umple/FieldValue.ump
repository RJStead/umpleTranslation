namespace weka.core.pmml.jaxbbindings;

class FieldValue
{
 depend java.util.ArrayList;
 depend java.util.List;
 depend javax.xml.bind.annotation.XmlAccessType;
 depend javax.xml.bind.annotation.XmlAccessorType;
 depend javax.xml.bind.annotation.XmlAttribute;
 depend javax.xml.bind.annotation.XmlElement;
 depend javax.xml.bind.annotation.XmlRootElement;
 depend javax.xml.bind.annotation.XmlType;
@XmlElement(name="Extension",namespace="http://www.dmg.org/PMML-4_1",required=true) protected List<Extension> extension;

@XmlElement(name="FieldValue",namespace="http://www.dmg.org/PMML-4_1",required=true) protected List<FieldValue> fieldValue;

@XmlElement(name="FieldValueCount",namespace="http://www.dmg.org/PMML-4_1",required=true) protected List<FieldValueCount> fieldValueCount;

@XmlAttribute(required=true) protected String field;

@XmlAttribute(required=true) protected String value;

/** 
 * Gets the value of the extension property. <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the extension property. <p> For example, to add a new item, do as follows: <pre> getExtension().add(newItem); </pre> <p> Objects of the following type(s) are allowed in the list {@link Extension }
 */
public List<Extension> getExtension(){
  if (extension == null) {
    extension=new ArrayList<Extension>();
  }
  return this.extension;
}

/** 
 * Gets the value of the fieldValue property. <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the fieldValue property. <p> For example, to add a new item, do as follows: <pre> getFieldValue().add(newItem); </pre> <p> Objects of the following type(s) are allowed in the list {@link FieldValue }
 */
public List<FieldValue> getFieldValue(){
  if (fieldValue == null) {
    fieldValue=new ArrayList<FieldValue>();
  }
  return this.fieldValue;
}

/** 
 * Gets the value of the fieldValueCount property. <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the fieldValueCount property. <p> For example, to add a new item, do as follows: <pre> getFieldValueCount().add(newItem); </pre> <p> Objects of the following type(s) are allowed in the list {@link FieldValueCount }
 */
public List<FieldValueCount> getFieldValueCount(){
  if (fieldValueCount == null) {
    fieldValueCount=new ArrayList<FieldValueCount>();
  }
  return this.fieldValueCount;
}

/** 
 * Gets the value of the field property.
 * @return possible object is {@link String }
 */
public String getField(){
  return field;
}

/** 
 * Sets the value of the field property.
 * @param value allowed object is {@link String }
 */
public void setField(String value){
  this.field=value;
}

/** 
 * Gets the value of the value property.
 * @return possible object is {@link String }
 */
public String getValue(){
  return value;
}

/** 
 * Sets the value of the value property.
 * @param value allowed object is {@link String }
 */
public void setValue(String value){
  this.value=value;
}
}
