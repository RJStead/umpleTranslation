namespace weka.gui;

class BrowserHelper
{
 depend java.awt.Color;
 depend java.awt.Component;
 depend java.awt.event.MouseAdapter;
 depend java.awt.event.MouseEvent;
 depend java.lang.reflect.Method;
 depend javax.swing.JLabel;
 depend javax.swing.JOptionPane;
/** 
 * Linux/Unix binaries to look for 
 */
public final static String[] LINUX_BROWSERS={"firefox","google-chrome","opera","konqueror","epiphany","mozilla","netscape"};

/** 
 * opens the URL in a browser.
 * @param url the URL to open
 */
public static void openURL(String url){
  openURL(null,url);
}

/** 
 * opens the URL in a browser.
 * @param parent the parent component
 * @param url the URL to open
 */
public static void openURL(Component parent,String url){
  openURL(parent,url,true);
}

/** 
 * opens the URL in a browser.
 * @param parent the parent component
 * @param url the URL to open
 * @param showDialog whether to display a dialog in case of an error or justprint the error to the console
 */
public static void openURL(Component parent,String url,boolean showDialog){
  String osName=System.getProperty("os.name");
  try {
    if (osName.startsWith("Mac OS")) {
      Class<?> fileMgr=Class.forName("com.apple.eio.FileManager");
      Method openURL=fileMgr.getDeclaredMethod("openURL",new Class[]{String.class});
      openURL.invoke(null,new Object[]{url});
    }
 else     if (osName.startsWith("Windows")) {
      Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + url);
    }
 else {
      String browser=null;
      for (int count=0; count < LINUX_BROWSERS.length && browser == null; count++) {
        if (Runtime.getRuntime().exec(new String[]{"which",LINUX_BROWSERS[count]}).waitFor() == 0) {
          browser=LINUX_BROWSERS[count];
          break;
        }
      }
      if (browser == null) {
        throw new Exception("Could not find web browser");
      }
 else {
        Runtime.getRuntime().exec(new String[]{browser,url});
      }
    }
  }
 catch (  Exception e) {
    String errMsg="Error attempting to launch web browser:\n" + e.getMessage();
    if (showDialog) {
      JOptionPane.showMessageDialog(parent,errMsg);
    }
 else {
      System.err.println(errMsg);
    }
  }
}

/** 
 * Generates a label with a clickable link.
 * @param url the url of the link
 * @param text the text to display instead of URL. if null or of length 0 thenthe URL is used
 * @return the generated label
 */
public static JLabel createLink(String url,String text){
  final String urlF=url;
  final JLabel result=new JLabel();
  result.setText((text == null) || (text.length() == 0) ? url : text);
  result.setToolTipText("Click to open link in browser");
  result.setForeground(Color.BLUE);
  result.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      if (e.getButton() == MouseEvent.BUTTON1) {
        BrowserHelper.openURL(urlF);
      }
 else {
        super.mouseClicked(e);
      }
    }
    @Override public void mouseEntered(    MouseEvent e){
      result.setForeground(Color.RED);
    }
    @Override public void mouseExited(    MouseEvent e){
      result.setForeground(Color.BLUE);
    }
  }
);
  return result;
}

@Override public void mouseClicked(MouseEvent e){
  if (e.getButton() == MouseEvent.BUTTON1) {
    BrowserHelper.openURL(urlF);
  }
 else {
    super.mouseClicked(e);
  }
}

@Override public void mouseEntered(MouseEvent e){
  result.setForeground(Color.RED);
}

@Override public void mouseExited(MouseEvent e){
  result.setForeground(Color.BLUE);
}
}
