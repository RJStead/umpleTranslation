namespace weka.core.pmml.jaxbbindings;

class INTSparseArray
{
 depend java.math.BigInteger;
 depend java.util.ArrayList;
 depend java.util.List;
 depend javax.xml.bind.annotation.XmlAccessType;
 depend javax.xml.bind.annotation.XmlAccessorType;
 depend javax.xml.bind.annotation.XmlAttribute;
 depend javax.xml.bind.annotation.XmlElement;
 depend javax.xml.bind.annotation.XmlList;
 depend javax.xml.bind.annotation.XmlRootElement;
 depend javax.xml.bind.annotation.XmlType;
@XmlList @XmlElement(name="Indices",namespace="http://www.dmg.org/PMML-4_1",type=Integer.class) protected List<Integer> indices;

@XmlList @XmlElement(name="INT-Entries",namespace="http://www.dmg.org/PMML-4_1",type=Integer.class) protected List<Integer> intEntries;

@XmlAttribute protected BigInteger defaultValue;

@XmlAttribute protected BigInteger n;

/** 
 * Gets the value of the indices property. <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the indices property. <p> For example, to add a new item, do as follows: <pre> getIndices().add(newItem); </pre> <p> Objects of the following type(s) are allowed in the list {@link Integer }
 */
public List<Integer> getIndices(){
  if (indices == null) {
    indices=new ArrayList<Integer>();
  }
  return this.indices;
}

/** 
 * Gets the value of the intEntries property. <p> This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for the intEntries property. <p> For example, to add a new item, do as follows: <pre> getINTEntries().add(newItem); </pre> <p> Objects of the following type(s) are allowed in the list {@link Integer }
 */
public List<Integer> getINTEntries(){
  if (intEntries == null) {
    intEntries=new ArrayList<Integer>();
  }
  return this.intEntries;
}

/** 
 * Gets the value of the defaultValue property.
 * @return possible object is {@link BigInteger }
 */
public BigInteger getDefaultValue(){
  if (defaultValue == null) {
    return new BigInteger("0");
  }
 else {
    return defaultValue;
  }
}

/** 
 * Sets the value of the defaultValue property.
 * @param value allowed object is {@link BigInteger }
 */
public void setDefaultValue(BigInteger value){
  this.defaultValue=value;
}

/** 
 * Gets the value of the n property.
 * @return possible object is {@link BigInteger }
 */
public BigInteger getN(){
  return n;
}

/** 
 * Sets the value of the n property.
 * @param value allowed object is {@link BigInteger }
 */
public void setN(BigInteger value){
  this.n=value;
}
}
