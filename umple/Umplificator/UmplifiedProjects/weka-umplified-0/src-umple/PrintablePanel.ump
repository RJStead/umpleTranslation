namespace weka.gui.visualize;

class PrintablePanel
{
  isA PrintableHandler;
  isA JPanel;
 depend java.util.Hashtable;
 depend javax.swing.JPanel;
/** 
 * for serialization 
 */
private static final long serialVersionUID=6281532227633417538L;

/** 
 * the class responsible for printing 
 */
protected PrintableComponent m_Printer=null;

/** 
 * initializes the panel
 */
public PrintablePanel(){
  super();
  m_Printer=new PrintableComponent(this);
}

/** 
 * returns a Hashtable with the current available JComponentWriters in the save dialog. the key of the Hashtable is the description of the writer.
 * @return all currently available JComponentWriters
 * @see JComponentWriter#getDescription()
 */
@Override public Hashtable<String,JComponentWriter> getWriters(){
  return m_Printer.getWriters();
}

/** 
 * returns the JComponentWriter associated with the given name, is <code>null</code> if not found
 * @return the writer associated with the given name
 * @see JComponentWriter#getDescription()
 */
@Override public JComponentWriter getWriter(String name){
  return m_Printer.getWriter(name);
}

/** 
 * sets the title for the save dialog
 */
@Override public void setSaveDialogTitle(String title){
  m_Printer.setSaveDialogTitle(title);
}

/** 
 * returns the title for the save dialog
 */
@Override public String getSaveDialogTitle(){
  return m_Printer.getSaveDialogTitle();
}

/** 
 * sets the scale factor
 * @param x the scale factor for the x-axis
 * @param y the scale factor for the y-axis
 */
@Override public void setScale(double x,double y){
  m_Printer.setScale(x,y);
}

/** 
 * returns the scale factor for the x-axis
 */
@Override public double getXScale(){
  return m_Printer.getXScale();
}

/** 
 * returns the scale factor for the y-axis
 */
@Override public double getYScale(){
  return m_Printer.getYScale();
}

/** 
 * displays a save dialog for saving the panel to a file.
 */
@Override public void saveComponent(){
  m_Printer.saveComponent();
}
}
