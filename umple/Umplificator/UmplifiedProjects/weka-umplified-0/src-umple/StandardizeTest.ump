namespace weka.filters.unsupervised.attribute;

class StandardizeTest
{
  isA AbstractFilterTest;
 depend weka.core.Instances;
 depend weka.core.Utils;
 depend weka.filters.AbstractFilterTest;
 depend weka.filters.Filter;
 depend junit.framework.Test;
 depend junit.framework.TestSuite;
public StandardizeTest(String name){
  super(name);
}

/** 
 * Creates an example Standardize 
 */
public Filter getFilter(){
  Standardize f=new Standardize();
  return f;
}

public void testTypical(){
  Instances result=useFilter();
  assertEquals(m_Instances.numAttributes(),result.numAttributes());
  assertEquals(m_Instances.numInstances(),result.numInstances());
  for (int j=0; j < result.numAttributes(); j++) {
    if (result.attribute(j).isNumeric()) {
      double mean=result.meanOrMode(j);
      assertTrue("Mean should be 0",Utils.eq(mean,0));
      double stdDev=Math.sqrt(result.variance(j));
      assertTrue("StdDev should be 1 (or 0)",Utils.eq(stdDev,0) || Utils.eq(stdDev,1));
    }
  }
}

public static Test suite(){
  return new TestSuite(StandardizeTest.class);
}

public static void main(String[] args){
  junit.textui.TestRunner.run(suite());
}
}
