namespace weka.core.stopwords;

class WordsFromFile
{
  isA AbstractFileBasedStopwords;
 depend java.util.HashSet;
 depend java.util.List;
/** 
 * for serialization. 
 */
private static final long serialVersionUID=-722795295494945193L;

/** 
 * The hash set containing the list of stopwords. 
 */
protected HashSet<String> m_Words;

/** 
 * Returns a string describing the stopwords scheme.
 * @return a description suitable for displaying in the gui
 */
@Override public String globalInfo(){
  return "Uses the stopwords located in the specified file (ignored _if " + "pointing to a directory). One stopword per line. Lines " + "starting with '#' are considered comments and ignored.";
}

/** 
 * Returns the tip text for this property.
 * @return tip text for this property suitable for displaying in theexplorer/experimenter gui
 */
@Override public String stopwordsTipText(){
  return "The file containing the stopwords.";
}

/** 
 * Performs intialization of the scheme.
 */
@Override protected void initialize(){
  List<String> words;
  super.initialize();
  m_Words=new HashSet<String>();
  words=read();
  for (  String word : words) {
    if (!word.startsWith("#"))     m_Words.add(word);
  }
}

/** 
 * Returns true if the given string is a stop word.
 * @param word the word to test
 * @return true if the word is a stopword
 */
@Override protected synchronized boolean is(String word){
  return m_Words.contains(word.trim().toLowerCase());
}
}
