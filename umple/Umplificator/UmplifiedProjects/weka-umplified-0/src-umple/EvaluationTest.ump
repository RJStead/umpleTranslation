namespace weka.classifiers.evaluation;

class EvaluationTest
{
  isA TestCase;
 depend java.io.IOException;
 depend java.io.StringReader;
 depend junit.framework.Test;
 depend junit.framework.TestCase;
 depend junit.framework.TestSuite;
 depend weka.core.Instances;
public static final String DATA="@relation test\n@attribute one numeric\n@attribute two numeric\n@attribute class {T, F}\n@data\n\n" + "6.5,3.0,T\n" + "6.2,3.4,T\n"+ "5.9,3.0,T\n"+ "7.0,3.2,F\n"+ "6.4,3.2,F\n"+ "6.9,3.1,F\n";

public static final double[][] PREDS={{0.231,0.769},{1,0},{0.956,0.044},{0.013,0.987},{0.484,0.516},{0.068,0.932}};

public EvaluationTest(String name){
  super(name);
}

public void testRegression() throws Exception {
  Instances inst=new Instances(new StringReader(DATA));
  inst.setClassIndex(inst.numAttributes() - 1);
  Evaluation eval=new Evaluation(inst);
  for (int i=0; i < inst.numInstances(); i++) {
    eval.evaluateModelOnceAndRecordPrediction(PREDS[i],inst.instance(i));
  }
  String standard=eval.toSummaryString();
  String info=eval.toClassDetailsString();
  weka.test.Regression reg=new weka.test.Regression(getClass());
  reg.println(standard);
  reg.println(info);
  try {
    String diff=reg.diff();
    if (diff == null) {
      System.err.println("Warning: No reference available, creating.");
    }
 else     if (!diff.equals("")) {
      fail("Regression tst failed. Difference:\n" + diff);
    }
  }
 catch (  IOException ex) {
    fail("Problem during regression testing.\n" + ex);
  }
}

public static Test suite(){
  return new TestSuite(weka.classifiers.evaluation.EvaluationTest.class);
}

public static void main(String[] args){
  junit.textui.TestRunner.run(suite());
}
}
