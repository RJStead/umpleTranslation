namespace weka.core.converters;

class C45Test
{
  isA AbstractFileConverterTest;
 depend java.io.File;
 depend junit.framework.Test;
 depend junit.framework.TestSuite;
/** 
 * the name of the data file 
 */
protected String m_ExportFilenameData;

/** 
 * Constructs the <code>C45Test</code>.
 * @param name the name of the test class
 */
public C45Test(String name){
  super(name);
}

/** 
 * returns the loader used in the tests
 * @return the configured loader
 */
public AbstractLoader getLoader(){
  return new C45Loader();
}

/** 
 * returns the saver used in the tests
 * @return the configured saver
 */
public AbstractSaver getSaver(){
  return new C45Saver();
}

/** 
 * returns the filename for the data file.
 * @return the filename
 */
protected String getExportFilenameData(){
  return m_ExportFilename.replaceAll("\\.names",".data");
}

/** 
 * returns the command line options, either for the loader or the saver
 * @param loader	if true the options for the loader will be returned,otherwise the ones for the saver
 * @return		the command line options
 */
protected String[] getCommandlineOptions(boolean loader){
  if (loader)   return super.getCommandlineOptions(loader);
 else   return new String[]{"-i",m_SourceFilename,"-o",m_ExportFilename,"-c","last"};
}

/** 
 * Called by JUnit before each test method.
 * @throws Exception if an error occurs reading the example instances.
 */
protected void setUp() throws Exception {
  File file;
  super.setUp();
  m_ExportFilenameData=getExportFilenameData();
  file=new File(m_ExportFilenameData);
  if (file.exists())   file.delete();
}

/** 
 * Called by JUnit after each test method
 */
protected void tearDown() throws Exception {
  File file;
  file=new File(m_ExportFilenameData);
  if (file.exists())   file.delete();
  m_ExportFilenameData=null;
  super.tearDown();
}

/** 
 * ignored, since not supported!
 */
public void testLoaderWithStream(){
  System.out.println("testLoaderWithStream is ignored!");
}

/** 
 * returns a test suite
 * @return the test suite
 */
public static Test suite(){
  return new TestSuite(C45Test.class);
}

/** 
 * for running the test from commandline
 * @param args the commandline arguments - ignored
 */
public static void main(String[] args){
  junit.textui.TestRunner.run(suite());
}
}
