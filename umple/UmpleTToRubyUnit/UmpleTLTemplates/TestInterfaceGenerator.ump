use UmpleNotice.ump;


namespace cruise.umple.compiler.sql;

external interface ILang{}

class SqlInterfaceGenerator {
    depend cruise.umple.compiler.*;
    depend cruise.umple.util.*;
    depend java.util.*;

    isA ILang;

    // Add a newline to the end of the input
    private void appendln(StringBuilder buffer, String input, Object... variables)
    {
        append(buffer, input + "\n", variables);
    }

    // This method will be used to append formatted strings
    // i.e. format("Hello {0} {1}", "andrew","forward");
    private void append(StringBuilder buffer, String input, Object... variables)
    {
        buffer.append(StringFormatter.format(input,variables));
    }

    emit getCode(UmpleModel model, UmpleElement uElement)(sqlInterfaceGenerator);


    sqlInterfaceGenerator <<!<</*sqlInterfaceGenerator*/>><<@ UmpleToSql.UmpleNotice >>
<<#
// Interfaces don't really make sense with Sql.
// A possible solution around this, is to make 
// every class that uses said interface X, also 
// generate the attributes/associations for interface X.
// This file should probably ignored.
// We should also prevent SqlGenerator from
// trying to create an interface.

#>>!>>
}
