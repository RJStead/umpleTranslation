class UmpleToJava {
  attribute_IsBooleanCodeInjectionDerived <<!  /* Code from template attribute_IsBooleanCodeInjectionDerived */
<</*attribute_IsBooleanCodeInjectionDerived*/>>  public <<=gen.translate("type",av)>> <<= gen.translate("isMethod",av) >>()
  {
    <<# if (customGetPrefixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customGetPrefixCode,gen.translate("isMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customGetPrefixCode, "    ")); } #>>
    <<= gen.translate("type",av) >> <<= gen.translate("parameterOne",av) >> = <<= gen.translate("parameterValue",av) >>;
    <<# for( TraceItem traceItem : traceItems ) #>><<= (traceItem!=null?traceItem.trace(gen, av,"at_i", uClass, gen.translate("parameterOne",av), "index"):"")>>


<<# if (customGetPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customGetPostfixCode,gen.translate("isMethod",av));   
    append(realSb, "{0}\n",GeneratorHelper.doIndent(customGetPostfixCode, "    ")); }#>>    return <<= gen.translate("parameterOne",av) >>;
  }!>>
}
