class UmpleToJava {
  association_SetOneToOptionalOne <<!  /* Code from template association_SetOneToOptionalOne */
<</*association_SetOneToOptionalOne*/>>  public boolean <<=gen.translate("setMethod",av)>>(<<=gen.translate("type",av)>> <<=gen.translate("parameterNew",av)>>)
  {
    boolean wasSet = false;
    <<# if (customSetPrefixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPrefixCode,gen.translate("setMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPrefixCode, "    ")); } #>>
    if (<<=gen.translate("parameterNew",av)>> == null)
    {
      //Unable to <<=gen.translate("setMethod",av)>> to null, as <<=gen.relatedTranslate("associationOne",av)>> must always be associated to a <<=gen.translate("associationOne",av)>>
      <<# if (customSetPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPostfixCode,gen.translate("setMethod",av)); 
      append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPostfixCode, "      ")); } #>>
      return wasSet;
    }
    
    <<=gen.relatedTranslate("type",av)>> <<=gen.relatedTranslate("parameterExisting",av)>> = <<=gen.translate("parameterNew",av)>>.<<=gen.relatedTranslate("getMethod",av)>>();
    if (<<=gen.relatedTranslate("parameterExisting",av)>> != null && !equals(<<=gen.relatedTranslate("parameterExisting",av)>>))
    {
      //Unable to <<=gen.translate("setMethod",av)>>, the current <<=gen.translate("associationOne",av)>> already has a <<=gen.relatedTranslate("associationOne",av)>>, which would be orphaned if it were re-assigned
      <<# if (customSetPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPostfixCode,gen.translate("setMethod",av)); 
      append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPostfixCode, "      ")); } #>>
      return wasSet;
    }
    
    <<=gen.translate("type",av)>> <<=gen.translate("parameterOld",av)>> = <<=gen.translate("associationOne",av)>>;
    <<=gen.translate("associationOne",av)>> = <<=gen.translate("parameterNew",av)>>;
    <<=gen.translate("associationOne",av)>>.<<=gen.relatedTranslate("setMethod",av)>>(<<=self>>);

    if (<<=gen.translate("parameterOld",av)>> != null)
    {
      <<=gen.translate("parameterOld",av)>>.<<=gen.relatedTranslate("setMethod",av)>>(null);
    }
    wasSet = true;<<#for( TraceItem traceItemAssocAdd : traceItemAssocAdds )#>><<=
    (traceItemAssocAdd!=null&&traceItemAssocAdd.getIsPost()?"\n"+traceItemAssocAdd.trace(gen, av,"as_a", uClass,"1"):"")>>
    <<# if (customSetPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPostfixCode,gen.translate("setMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPostfixCode, "    ")); } #>>
    return wasSet;
  }
!>>
}
