class UmpleToJava {
  association_SetOneToAtMostN_relatedSpecialization <<!  /* Code from template association_SetOneToAtMostN_relatedSpecialization */
<</*association_SetOneToAtMostN_relatedSpecialization*/>>  public boolean <<=gen.translate("setMethod",av)>>_<<=gen.translate("type",av)>>(<<=gen.translate("type",av)>> <<=gen.translate("parameterOne",av)>>)
  {
    boolean wasSet = false;
    <<# if (customSetPrefixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPrefixCode,gen.translate("setMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPrefixCode, "    ")); } #>>
    //Must provide <<=gen.translate("associationOne",av)>> to <<=gen.relatedTranslate("associationOne",av)>>
    if (<<=gen.translate("parameterOne",av)>> == null)
    {
      <<# if (customSetPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPostfixCode,gen.translate("setMethod",av)); 
      append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPostfixCode, "      ")); } #>>
      return wasSet;
    }

    //<<=gen.translate("associationOne",av)>> already at maximum (<<=relatedAssociation.getMultiplicity().getUpperBound()>>)
    if (<<=gen.translate("parameterOne",av)>>.<<=gen.relatedTranslate("numberOfMethod",av)>>() >= <<=gen.translate("type",av)>>.<<=gen.relatedTranslate("maximumNumberOfMethod",av)>>_<<=gen.relatedTranslate("type",av)>>())
    {
      <<# if (customSetPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPostfixCode,gen.translate("setMethod",av)); 
      append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPostfixCode, "      ")); } #>>
      return wasSet;
    }
    
    <<=gen.translate("type",av)>> <<=gen.translate("parameterExisting",av)>> = <<# if (mulChangedToOne) { #>><<=gen.translate("getMethod",av)>>_One<<=gen.translate("type",av)>>()<<# } else {#>>(<<=gen.translate("type",av)>>)<<=gen.translate("associationOne",av)>><<# } #>>;
    <<# if (!mulChangedToOne) { #>>
    <<=gen.translate("associationOne",av)>> = <<=gen.translate("parameterOne",av)>>;
    <<# } else { #>>
    <<=gen.translate("associationOne",av)>>.clear();
    <<=gen.translate("associationOne",av)>>.add(<<=gen.translate("parameterOne",av)>>);
    <<# } #>>
    if (<<=gen.translate("parameterExisting",av)>> != null && !<<=gen.translate("parameterExisting",av)>>.equals(<<=gen.translate("parameterOne",av)>>))
    {
      boolean didRemove = <<=gen.translate("parameterExisting",av)>>.<<=gen.relatedTranslate("removeMethod",av)>>(this);
      if (!didRemove)
      {
          <<# if (!mulChangedToOne) { #>>
        <<=gen.translate("associationOne",av)>> = <<=gen.translate("parameterExisting",av)>>;
        <<# } else { #>>
        <<=gen.translate("associationOne",av)>>.clear();
        <<=gen.translate("associationOne",av)>>.add(<<=gen.translate("parameterExisting",av)>>);
        <<# } #>>
        <<# if (customSetPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPostfixCode,gen.translate("setMethod",av)); 
        append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPostfixCode, "      ")); } #>>
        return wasSet;
      }
    }
    <<=gen.translate("parameterOne",av)>>.<<=gen.relatedTranslate("addMethod",av)>>(this);
    wasSet = true;
    <<# if (customSetPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPostfixCode,gen.translate("setMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPostfixCode, "    ")); } #>>
    return wasSet;
  }
!>>
}
