User Manual Basics%Simple examples and basic information;
Comments and Requirements%Ways to comment Umple code;
Directives%Top level statements in Umple code;
Classes and Interfaces%Ways of dividing a system into classes and arranging a generalization hierarchy to enable inheritance (See also Traits);
Attributes%Simple data attached to each instance of a class;
Enumerations%Data types defining sets of named items;
Associations%Relationships that define run-time links between instances of classes;
Constraints%Logic statements that define rules for permissible values;
Patterns%Common ways to structure parts of software, for which Umple can generate code;
State Machines%Definitions of behaviour defined in terms of states and transitions, and which generate  diagrams describing this behaviour;
Methods%Code for functions in target languages embedded within within Umple classes;
Traits%Building blocks that can be used to define groups of common features such as attributes, associations and state machines, that can be reused in several classes;
Aspect Orientation%Capabilities for injecting code (aspects) before or after other code in various classes defined by a pattern -- the code can be injected into generated and custom methods;
Mixsets and Filters%Ways of grouping code to allow specification of variants, product lines or partial systems;
Generation Templates%Specifications of reusable textual output -- useful for generating messages and languages;
Concurrency%Capabilities to define elements of programs that will run at the same time as others;
Distribution%Capabilities to generate code for components that will run on different processors and communicate with each other;
Composite Structure%Capabilities to define components with nested elements and communication channels;
Tracing%Capabilities to specify run-time tracing of API calls for attributes, associations, state machines and methods;
UmpleOnline%Capabilities of the Umple web-based interface that runs at try.umple.org and in Docker;
Umplification%Capabilities to reverse engineer Java to Umple;
Examples%A selection of Umple examples, many more can be found in UmnpleOnline and other manual pages;
Tips%A collection of all the different tips-of-the-day that would occasionally appear;
Misc;
Grammar To Define Umple%The syntax of each element of Umple;
Generated API%Summary of key methods generated from Umple constructs;
Errors and Warnings 1-50%Explanation of error and warning messages, along with examples of the problem and how to fix it - messages with numbers from 1 to 50;
Errors and Warnings 51-99%Explanation of error and warning messages, along with examples of the problem and how to fix it - messages with numbers from 51 to 99;
Errors and Warnings 100-999%Explanation of error and warning messages, along with examples of the problem and how to fix it - messages with numbers from 100 to 999;
Errors and Warnings 1000+%Explanation of error and warning messages, along with examples of the problem and how to fix it - messages with numbers 1000 and above;
Runtime Exceptions%Certain situations that throw exceptions in runtime code;
Tests%Capabilities for Umple code to contain internal assertions and tests, including tests that test the validity of models;

