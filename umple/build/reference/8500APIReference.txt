API Summary
Generated API
noreferences
@@description

<p>The following table describes the API generated from various Umple features. This is designed as a quick reference. To find the exact API for any system that would be generated in Java, use UmpleOnline and request to generate JavaDoc output.</p>

<!-- Regenerate the following from the style block and table block created by doing 'save as webpage' from ExcelForAPIDocumentation/UmpleApiSummary.xlsx -->

<style>
<!--table
	{mso-displayed-decimal-separator:"\.";
	mso-displayed-thousand-separator:"\,";}
@page
	{margin:1.0in .75in 1.0in .75in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;}
.style108
	{color:blue;
	font-size:12.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:underline;
	text-underline-style:single;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	mso-style-name:Hyperlink;
	mso-style-id:8;}
a:link
	{color:blue;
	font-size:12.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:underline;
	text-underline-style:single;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;}
a:visited
	{color:purple;
	font-size:12.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:underline;
	text-underline-style:single;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;}
.style0
	{mso-number-format:General;
	text-align:general;
	vertical-align:bottom;
	white-space:nowrap;
	mso-rotate:0;
	mso-background-source:auto;
	mso-pattern:auto;
	color:black;
	font-size:12.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	border:none;
	mso-protection:locked visible;
	mso-style-name:Normal;
	mso-style-id:0;}
td
	{mso-style-parent:style0;
	padding-top:1px;
	padding-right:1px;
	padding-left:1px;
	mso-ignore:padding;
	color:black;
	font-size:12.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	mso-number-format:General;
	text-align:general;
	vertical-align:bottom;
	border:none;
	mso-background-source:auto;
	mso-pattern:auto;
	mso-protection:locked visible;
	white-space:nowrap;
	mso-rotate:0;}
.xl65
	{mso-style-parent:style0;
	background:#CCFFCC;
	mso-pattern:black none;}
.xl66
	{mso-style-parent:style0;
	font-weight:700;}
.xl67
	{mso-style-parent:style0;
	font-weight:700;
	background:#FF6600;
	mso-pattern:black none;}
.xl68
	{mso-style-parent:style0;
	background:#FF6600;
	mso-pattern:black none;}
.xl69
	{mso-style-parent:style0;
	background:#95B3D7;
	mso-pattern:black none;}
.xl70
	{mso-style-parent:style0;
	background:yellow;
	mso-pattern:black none;}
.xl71
	{mso-style-parent:style0;
	background:#BFBFBF;
	mso-pattern:black none;}
.xl72
	{mso-style-parent:style0;
	color:black;
	background:#BFBFBF;
	mso-pattern:black none;}
.xl73
	{mso-style-parent:style0;
	background:#FCD5B4;
	mso-pattern:black none;}
.xl74
	{mso-style-parent:style108;
	color:blue;
	text-decoration:underline;
	text-underline-style:single;
	background:#FF6600;
	mso-pattern:black none;}
.xl75
	{mso-style-parent:style0;
	background:#B7DEE8;
	mso-pattern:black none;}
.xl76
	{mso-style-parent:style0;
	font-style:italic;
	font-family:Calibri;
	mso-generic-font-family:auto;
	mso-font-charset:0;
	background:#B7DEE8;
	mso-pattern:black none;}
-->
</style>

<table border=0 cellpadding=0 cellspacing=0 width=1559 style='border-collapse:
 collapse;table-layout:fixed;width:1559pt'>
 <col width=194 style='mso-width-source:userset;mso-width-alt:8277;width:194pt'>
 <col width=222 style='mso-width-source:userset;mso-width-alt:9472;width:222pt'>
 <col width=86 style='mso-width-source:userset;mso-width-alt:3669;width:86pt'>
 <col width=112 style='mso-width-source:userset;mso-width-alt:4778;width:112pt'>
 <col width=79 style='mso-width-source:userset;mso-width-alt:3370;width:79pt'>
 <col width=108 style='mso-width-source:userset;mso-width-alt:4608;width:108pt'>
 <col width=113 style='mso-width-source:userset;mso-width-alt:4821;width:113pt'>
 <col width=118 span=2 style='mso-width-source:userset;mso-width-alt:5034;
 width:118pt'>
 <col width=127 style='mso-width-source:userset;mso-width-alt:5418;width:127pt'>
 <col width=70 style='mso-width-source:userset;mso-width-alt:2986;width:70pt'>
 <col width=123 style='mso-width-source:userset;mso-width-alt:5248;width:123pt'>
 <col width=89 style='mso-width-source:userset;mso-width-alt:3797;width:89pt'>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=5 width=693 style='height:15.0pt;mso-ignore:colspan;
  width:693pt'>Summary of the API generated by Umple from attributes,
  associations, state machines and other features</td>
  <td width=108 style='width:108pt'></td>
  <td width=113 style='width:113pt'></td>
  <td width=118 style='width:118pt'></td>
  <td width=118 style='width:118pt'></td>
  <td width=127 style='width:127pt'></td>
  <td width=70 style='width:70pt'></td>
  <td width=123 style='width:123pt'></td>
  <td width=89 style='width:89pt'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl68 height=15 style='height:15.0pt'>
  <td height=15 class=xl67 style='height:15.0pt'>API GENERATED IN ALL CASES</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>void delete()</td>
  <td colspan=3 style='mso-ignore:colspan'>removes object, correctly handling
  cascade deletion and referential integrity</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 colspan=3 style='height:15.0pt;mso-ignore:colspan'>any
  methods in the code are emitted as-is; they are made public if this is not
  declared</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl68 height=15 style='height:15.0pt'>
  <td height=15 class=xl74 style='height:15.0pt'><a
  href="http://attributes.umple.org">API GENERATED FROM ATTRIBUTES</a></td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=5 style='height:15.0pt;mso-ignore:colspan'>T is the
  type of the attribute (String if omitted); note that Umple builtin types such
  as Integer become native types such as int</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>z is the attribute name</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=3 style='height:15.0pt;mso-ignore:colspan'>Note that
  the API for array attributes is shown as a column in the associations table
  further down</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl69 height=15 style='height:15.0pt'>
  <td height=15 class=xl69 style='height:15.0pt'>Umple concept</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>basic</td>
  <td class=xl69>initialized</td>
  <td class=xl69>lazy</td>
  <td class=xl69>defaulted</td>
  <td class=xl69>lazy immutable</td>
  <td class=xl69>immutable</td>
  <td class=xl69>autounique</td>
  <td class=xl69>constant</td>
  <td class=xl69>internal</td>
  <td class=xl69>key</td>
  <td class=xl69>&nbsp;</td>
 </tr>
 <tr class=xl70 height=15 style='height:15.0pt'>
  <td height=15 class=xl70 style='height:15.0pt'>Umple notation</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>T z;</td>
  <td class=xl70>T z = val;</td>
  <td class=xl70>lazy T z;</td>
  <td class=xl70>defaulted T z = val;</td>
  <td class=xl70>lazy immutable T z;</td>
  <td class=xl70>immutable z;</td>
  <td class=xl70>autounique z</td>
  <td class=xl70>const T z=val</td>
  <td class=xl70>internal T z;</td>
  <td class=xl70>key { z }</td>
  <td class=xl70>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl65 height=15 style='height:15.0pt'>
  <td height=15 class=xl65 style='height:15.0pt'>Querying value</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>T getZ()</td>
  <td>return the value</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes; T always int</td>
  <td></td>
  <td></td>
  <td class=xl75>depends</td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>boolean isZ()</td>
  <td>return true if value is true</td>
  <td class=xl75>if T Boolean</td>
  <td class=xl75>if T Boolean</td>
  <td class=xl75>if T Boolean</td>
  <td class=xl75>if T Boolean</td>
  <td class=xl75>if T Boolean</td>
  <td class=xl75>if T Boolean</td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl75>depends</td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>boolean equals(Object)</td>
  <td>is equal to another?</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl65 height=15 style='height:15.0pt'>
  <td height=15 class=xl65 style='height:15.0pt'>Mutating</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>boolean setZ(T)</td>
  <td>mutates the attribute</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes; true only once</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl75>depends</td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>boolean resetZ()</td>
  <td>restores original default</td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl65 height=15 style='height:15.0pt'>
  <td height=15 class=xl65 style='height:15.0pt'>Other</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>T getDefaultZ()</td>
  <td>returns original default</td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>int hashCode()</td>
  <td>Likely unique value</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>constructor args</td>
  <td></td>
  <td class=xl73>T</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl73>T</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl71 height=15 style='height:15.0pt'>
  <td height=15 class=xl71 style='height:15.0pt'>initial value</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl71>constructor val</td>
  <td class=xl71>val</td>
  <td class=xl71>null/0/false</td>
  <td class=xl71>val</td>
  <td class=xl71>null/0/false</td>
  <td class=xl71>constructor val or val</td>
  <td class=xl71>next int</td>
  <td class=xl71>static val</td>
  <td class=xl71 colspan=2 style='mso-ignore:colspan'>construtor val</td>
  <td class=xl71>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl68 height=15 style='height:15.0pt'>
  <td height=15 class=xl74 colspan=2 style='height:15.0pt;mso-ignore:colspan'><a
  href="http://associations.umple.org">API GENERATED FROM ASSOCIATIONS</a></td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>X is the name of current class</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=6 style='height:15.0pt;mso-ignore:colspan'>W is the
  name of the class at the other end of the association; used in method names
  unless a role name is present; pluralization rules are applied</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=3 style='height:15.0pt;mso-ignore:colspan'>r is a role
  name used when referring to W (optional, except in reflexive associations)</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl69 height=15 style='height:15.0pt'>
  <td height=15 class=xl69 style='height:15.0pt'>Umple concept</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>? To many</td>
  <td class=xl69>? To many with role</td>
  <td class=xl69>optional</td>
  <td class=xl69>? To one</td>
  <td class=xl69>required many</td>
  <td class=xl69>directional</td>
  <td class=xl69>immutable</td>
  <td class=xl69>immutable optional</td>
  <td class=xl69>reflexive</td>
  <td class=xl69>symmetric reflexive</td>
  <td class=xl69>array attribute</td>
 </tr>
 <tr class=xl70 height=15 style='height:15.0pt'>
  <td height=15 class=xl70 style='height:15.0pt'>Umple notation</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70><span style="mso-spacerun:yes">&nbsp;</span>-- * W;</td>
  <td class=xl70><span style="mso-spacerun:yes">&nbsp;</span>-- * W r;</td>
  <td class=xl70><span style="mso-spacerun:yes">&nbsp;</span>-- 0..1 W;</td>
  <td class=xl70><span style="mso-spacerun:yes">&nbsp;</span>-- 1 W;</td>
  <td class=xl70><span style="mso-spacerun:yes">&nbsp;</span>-- 1..* W;</td>
  <td class=xl70><span style="mso-spacerun:yes">&nbsp;</span>-&gt; 1--* W;</td>
  <td class=xl70>immutable 1 -&gt; * W;</td>
  <td class=xl70>immutable 1 -&gt; 0..1 W;</td>
  <td class=xl70>* -- * X r;</td>
  <td class=xl70>* self r;</td>
  <td class=xl70>W [] r;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl65 height=15 style='height:15.0pt'>
  <td height=15 class=xl65 style='height:15.0pt'>Querying link(s)</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>W getW()</td>
  <td>return the W</td>
  <td></td>
  <td></td>
  <td class=xl73>yes; W or null</td>
  <td class=xl73>yes</td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl73>W or null</td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>W getW(index)</td>
  <td>pick a specific linked W</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes; getR(index)</td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td></td>
  <td class=xl73>R and X</td>
  <td class=xl73>R</td>
  <td class=xl73>yes; getR(index)</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>List&lt;W&gt; getWs()</td>
  <td>ges immutable list of links</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes; getR()</td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td></td>
  <td class=xl73>R and Xs</td>
  <td></td>
  <td class=xl73>yes; W[] getR()</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>boolean hasWs()</td>
  <td>is cardinality &gt; 0?</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes; hasR()</td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td></td>
  <td class=xl73>R and Xs</td>
  <td class=xl73>R</td>
  <td class=xl73>yes; hasR()</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>int indexOfW(W)</td>
  <td>look up specific W -1 if none</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes;<span style="mso-spacerun:yes">&nbsp; </span>… ofR(W)</td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td></td>
  <td class=xl73>R and X</td>
  <td class=xl73>R</td>
  <td class=xl73>yes;<span style="mso-spacerun:yes">&nbsp; </span>… ofR(W)</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>int numberOfWs()</td>
  <td>cardinality</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes; … ofR()</td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td></td>
  <td class=xl73>R and Xs</td>
  <td class=xl73>R</td>
  <td class=xl73>yes; … ofR()</td>
 </tr>
 <tr height=15 style='page-break-before:always;height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl65 height=15 style='height:15.0pt'>
  <td height=15 class=xl65 style='height:15.0pt'>Mutating</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>boolean setW(W)</td>
  <td>add a link to existing W</td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td class=xl75>if * -- or 0..1 --</td>
  <td></td>
  <td></td>
  <td class=xl76>never</td>
  <td class=xl76>never</td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>W addW(args)</td>
  <td>construct a new W and adds link</td>
  <td class=xl75>if 1 -- * W</td>
  <td class=xl75>if 1 -- * W r</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl76>never</td>
  <td class=xl76>never</td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>boolean addW(W)</td>
  <td>add a link to existing W</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes; addR(W)</td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl76>never</td>
  <td class=xl76>never</td>
  <td class=xl73>R and X</td>
  <td class=xl73>R</td>
  <td class=xl73>yes; addR(W)</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>boolean setWs(W…)</td>
  <td>add a set of links</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl76>never</td>
  <td class=xl76>never</td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>boolean removeW(W)</td>
  <td>remove link to W if possible</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes; removeR(W)</td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl76>never</td>
  <td class=xl76>never</td>
  <td class=xl73>R and Xs</td>
  <td class=xl73>R</td>
  <td class=xl73>yes; removeR(W)</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl65 height=15 style='height:15.0pt'>
  <td height=15 class=xl65 style='height:15.0pt'>Other</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>static int minimumNumberOfWs()</td>
  <td>multiplicity lower bound</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes; … ofR()</td>
  <td></td>
  <td></td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td></td>
  <td class=xl73>R and Xs</td>
  <td class=xl73>R</td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>static int maximumNumberOfWs()</td>
  <td>multiplicity upper bound if &gt; 1</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>static int
  requiredNumberOfWs()</td>
  <td>fixed multiplicity if &gt; 1</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>boolean isNumberOfWsValid()</td>
  <td>false if breaching constraints</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl73>yes; true initially</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>constructor args</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl73>W (W args if 1 -- 1)</td>
  <td></td>
  <td></td>
  <td class=xl73>W …</td>
  <td class=xl73>W</td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl71 height=15 style='height:15.0pt'>
  <td height=15 class=xl71 style='height:15.0pt'>initial value</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl71>empty</td>
  <td class=xl71>empty</td>
  <td class=xl71>empty</td>
  <td class=xl71>constructor val</td>
  <td class=xl71>empty</td>
  <td class=xl71>empty</td>
  <td class=xl71>constructor val</td>
  <td class=xl71>constructor val</td>
  <td class=xl72>empty</td>
  <td class=xl72>empty</td>
  <td class=xl71>empty</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl68 height=15 style='height:15.0pt'>
  <td height=15 class=xl74 colspan=2 style='height:15.0pt;mso-ignore:colspan'><a
  href="http://statemachines.umple.org">API GENGERATED FROM STATE MACHINES</a></td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>sm is the name of the state
  machine</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl69 height=15 style='height:15.0pt'>
  <td height=15 class=xl69 style='height:15.0pt'>Umple concept</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>Sm with events</td>
  <td class=xl69>Enum with no events</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>enum getSm()</td>
  <td>current state for statemachine sm</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>String getSmFullName()</td>
  <td>current state for statemachine sm</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>enum getSmS2()</td>
  <td>state of substate s2</td>
  <td class=xl73>yes</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>boolean e()</td>
  <td>event method e (for all events)</td>
  <td class=xl73>yes</td>
  <td class=xl73>yes</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>boolean setSm(enum)</td>
  <td>set state directly</td>
  <td></td>
  <td class=xl73>yes</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>Substates allowed</td>
  <td></td>
  <td class=xl73>yes</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl71 height=15 style='height:15.0pt'>
  <td height=15 class=xl71 style='height:15.0pt'>initial value</td>
  <td class=xl71>first state listed</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl71>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr class=xl68 height=15 style='height:15.0pt'>
  <td height=15 class=xl67 style='height:15.0pt'>API GENERATED FROM SINGLETON</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>static X getInstance()</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
</table>




