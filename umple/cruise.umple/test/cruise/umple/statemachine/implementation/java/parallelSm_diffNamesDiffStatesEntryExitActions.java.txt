/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/



public class X
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //X State Machines
  public enum Sm { s0, s1 }
  public enum SmS0T1 { Null, t1 }
  public enum SmS0T2 { Null, t2, t3 }
  public enum SmS1T4 { Null, t4, t5 }
  public enum SmS1T6 { Null, t6, t7 }
  private Sm sm;
  private SmS0T1 smS0T1;
  private SmS0T2 smS0T2;
  private SmS1T4 smS1T4;
  private SmS1T6 smS1T6;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public X()
  {
    setSmS0T1(SmS0T1.Null);
    setSmS0T2(SmS0T2.Null);
    setSmS1T4(SmS1T4.Null);
    setSmS1T6(SmS1T6.Null);
    setSm(Sm.s0);
  }

  //------------------------
  // INTERFACE
  //------------------------

  public String getSmFullName()
  {
    String answer = sm.toString();
    if (smS0T1 != SmS0T1.Null) { answer += "." + smS0T1.toString(); }
    if (smS0T2 != SmS0T2.Null) { answer += "." + smS0T2.toString(); }
    if (smS1T4 != SmS1T4.Null) { answer += "." + smS1T4.toString(); }
    if (smS1T6 != SmS1T6.Null) { answer += "." + smS1T6.toString(); }
    return answer;
  }

  public Sm getSm()
  {
    return sm;
  }

  public SmS0T1 getSmS0T1()
  {
    return smS0T1;
  }

  public SmS0T2 getSmS0T2()
  {
    return smS0T2;
  }

  public SmS1T4 getSmS1T4()
  {
    return smS1T4;
  }

  public SmS1T6 getSmS1T6()
  {
    return smS1T6;
  }

  public boolean goS1()
  {
    boolean wasEventProcessed = false;
    
    SmS0T1 aSmS0T1 = smS0T1;
    switch (aSmS0T1)
    {
      case t1:
        exitSm();
        setSm(Sm.s1);
        wasEventProcessed = true;
        break;
      default:
        // Other states do respond to this event
    }

    return wasEventProcessed;
  }

  public boolean goT3()
  {
    boolean wasEventProcessed = false;
    
    SmS0T2 aSmS0T2 = smS0T2;
    switch (aSmS0T2)
    {
      case t2:
        exitSmS0T2();
        setSmS0T2(SmS0T2.t3);
        wasEventProcessed = true;
        break;
      default:
        // Other states do respond to this event
    }

    return wasEventProcessed;
  }

  public boolean goT5()
  {
    boolean wasEventProcessed = false;
    
    SmS1T4 aSmS1T4 = smS1T4;
    switch (aSmS1T4)
    {
      case t4:
        exitSmS1T4();
        setSmS1T4(SmS1T4.t5);
        wasEventProcessed = true;
        break;
      default:
        // Other states do respond to this event
    }

    return wasEventProcessed;
  }

  public boolean goT7()
  {
    boolean wasEventProcessed = false;
    
    SmS1T6 aSmS1T6 = smS1T6;
    switch (aSmS1T6)
    {
      case t6:
        exitSmS1T6();
        setSmS1T6(SmS1T6.t7);
        wasEventProcessed = true;
        break;
      default:
        // Other states do respond to this event
    }

    return wasEventProcessed;
  }

  private void exitSm()
  {
    switch(sm)
    {
      case s0:
        exitSmS0T1();
        exitSmS0T2();
        break;
      case s1:
        exitSmS1T4();
        exitSmS1T6();
        break;
    }
  }

  private void setSm(Sm aSm)
  {
    sm = aSm;

    // entry actions and do activities
    switch(sm)
    {
      case s0:
        if (smS0T1 == SmS0T1.Null) { setSmS0T1(SmS0T1.t1); }
        if (smS0T2 == SmS0T2.Null) { setSmS0T2(SmS0T2.t2); }
        break;
      case s1:
        if (smS1T4 == SmS1T4.Null) { setSmS1T4(SmS1T4.t4); }
        if (smS1T6 == SmS1T6.Null) { setSmS1T6(SmS1T6.t6); }
        break;
    }
  }

  private void exitSmS0T1()
  {
    switch(smS0T1)
    {
      case t1:
        setSmS0T1(SmS0T1.Null);
        break;
    }
  }

  private void setSmS0T1(SmS0T1 aSmS0T1)
  {
    smS0T1 = aSmS0T1;
    if (sm != Sm.s0 && aSmS0T1 != SmS0T1.Null) { setSm(Sm.s0); }
  }

  private void exitSmS0T2()
  {
    switch(smS0T2)
    {
      case t2:
        t2_exit_action();
        setSmS0T2(SmS0T2.Null);
        break;
      case t3:
        setSmS0T2(SmS0T2.Null);
        break;
    }
  }

  private void setSmS0T2(SmS0T2 aSmS0T2)
  {
    smS0T2 = aSmS0T2;
    if (sm != Sm.s0 && aSmS0T2 != SmS0T2.Null) { setSm(Sm.s0); }

    // entry actions and do activities
    switch(smS0T2)
    {
      case t2:
        t2_entry_action();
        break;
    }
  }

  private void exitSmS1T4()
  {
    switch(smS1T4)
    {
      case t4:
        setSmS1T4(SmS1T4.Null);
        break;
      case t5:
        setSmS1T4(SmS1T4.Null);
        break;
    }
  }

  private void setSmS1T4(SmS1T4 aSmS1T4)
  {
    smS1T4 = aSmS1T4;
    if (sm != Sm.s1 && aSmS1T4 != SmS1T4.Null) { setSm(Sm.s1); }
  }

  private void exitSmS1T6()
  {
    switch(smS1T6)
    {
      case t6:
        t6_exit_action();
        setSmS1T6(SmS1T6.Null);
        break;
      case t7:
        setSmS1T6(SmS1T6.Null);
        break;
    }
  }

  private void setSmS1T6(SmS1T6 aSmS1T6)
  {
    smS1T6 = aSmS1T6;
    if (sm != Sm.s1 && aSmS1T6 != SmS1T6.Null) { setSm(Sm.s1); }

    // entry actions and do activities
    switch(smS1T6)
    {
      case t6:
        t6_entry_action();
        break;
    }
  }

  public void delete()
  {}

  public void t2_entry_action(){
    
  }

  public void t6_entry_action(){
    
  }

  public void t2_exit_action(){
    
  }

  public void t6_exit_action(){
    
  }

}