
package example;
import cruise.util.ConsoleTracer;

public class LightBulb
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //LightBulb Attributes
  private int v;

  //LightBulb State Machines
  public enum Status { On, Off }
  private Status status;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public LightBulb()
  {
    v = 0;
    setStatus(Status.On);
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setV(int aV)
  {
    boolean wasSet = false;
    v = aV;
    wasSet = true;
    return wasSet;
  }

  public int getV()
  {
    return v;
  }

  public String getStatusFullName()
  {
    String answer = status.toString();
    return answer;
  }

  public Status getStatus()
  {
    return status;
  }

  public boolean flip()
  {
    boolean wasEventProcessed = false;
    
    Status aStatus = status;
    switch (aStatus)
    {
      case On:
    ConsoleTracer.handle( System.currentTimeMillis()+","+Thread.currentThread().getId()+",TraceLightBulbState.ump,18,LightBulb,"+System.identityHashCode(this)+",sm_t,On,flip,Off" );
        setStatus(Status.Off);
        wasEventProcessed = true;
        break;
      case Off:
    ConsoleTracer.handle( System.currentTimeMillis()+","+Thread.currentThread().getId()+",TraceLightBulbState.ump,18,LightBulb,"+System.identityHashCode(this)+",sm_t,Off,flip,On" );
        setStatus(Status.On);
        wasEventProcessed = true;
        break;
      default:
        // Other states do respond to this event
    }

    return wasEventProcessed;
  }

  private void setStatus(Status aStatus)
  {
    status = aStatus;

    // entry actions and do activities
    switch(status)
    {
      case On:
        setV(1);
        break;
      case Off:
        setV(2);
        break;
    }
  }

  public void delete()
  {}


  public String toString()
  {
    return super.toString() + "["+
            "v" + ":" + getV()+ "]";
  }
}
