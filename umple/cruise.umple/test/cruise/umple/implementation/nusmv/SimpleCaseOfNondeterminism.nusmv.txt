-- This file is generated from SimpleCaseOfNondeterminism.ump --

-- PLEASE DO NOT EDIT THIS CODE --
-- This code was generated using the UMPLE @UMPLE_VERSION@ modeling language! --


-- This defines a NuSMV module for XSm --
MODULE XSm

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { Sm_s1 , Sm_s2 , Sm_s3 };
     event : { ev_e , ev_null };
     a : integer;
     b : integer;

   -- This part defines macros that summarize the transitions and guards (if any) of the given NuSMV module --
   DEFINE
     sm_stable :=  !( event = ev_e );
     t1 := event = ev_e & state = Sm_s1 & g1;
     t2 := event = ev_e & state = Sm_s1 & g2;
     g1 := a > 1;
     g2 := b < 1;

   -- This part defines logic for the assignment of values to state variable "state" of this NuSMV module --
   ASSIGN
     init( state ) := Sm_s1;
     next( state ) := case
       t1 : Sm_s2;
       t2 : Sm_s3;
       TRUE : state;
     esac;

   -- This part defines logic for the assignment of values to state variable "event" of this NuSMV module --
   ASSIGN
     init( event ) := ev_null;
     next( event ) := case
       sm_stable : { ev_e };
       TRUE : ev_null;
     esac;

   -- This part defines logic for the assignment of values to state variable "a" of this NuSMV module --
   ASSIGN
     init( a ) := 4;

   -- This part defines logic for the assignment of values to state variable "b" of this NuSMV module --
   ASSIGN
     init( b ) := 5;

-- This defines a NuSMV module for XSm_Machine --
MODULE XSm_Machine

   -- This part declares state variables for the given NuSMV module --
   VAR
     xSm : XSm;

-- This defines a NuSMV module for main --
MODULE main

   -- This part declares state variables for the given NuSMV module --
   VAR
     xSm_Machine : XSm_Machine;

   -- The following properties are specified to certify that this model is free of non-determinism. 
   INVARSPEC   ( xSm_Machine.xSm.t1 & xSm_Machine.xSm.t2 -> next( xSm_Machine.xSm.state = Sm_s2 & xSm_Machine.xSm.state = Sm_s3 ) )

   -- The following properties are specified to certify that non-symbolic state(s) of this model is (or are) reachable. 
   CTLSPEC   EF( xSm_Machine.xSm.state = Sm_s1 )
   CTLSPEC   EF( xSm_Machine.xSm.state = Sm_s2 )
   CTLSPEC   EF( xSm_Machine.xSm.state = Sm_s3 )