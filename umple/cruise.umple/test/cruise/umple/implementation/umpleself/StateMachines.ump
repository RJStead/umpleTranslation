generate UmpleSelf;

class X0
{
  bulb
  {
  }
}

class X
{
  status { A, B, C }
}

class X2 {
  
  status {
    On {
      e -> Off;
    }
    Off { }
  }
  
}

class X4
{
  status
  {
    On
    {
      press -> Off;
    }
    
    Off 
    {
      do {keepDoing};
    }
  }
}

class X5
{
  bulb
  {
    On 
    {
      push -> / {blabla} On;
    }
  }
}

class X7
{
  bulb
  {
    On {
      entry / { doOn }
      exit / { "a"; } 
    }
  }
  
  public void doOn() {}
}

class X8
{
  Integer dimmer = 0;
  Integer brightness = 0;
  bulb{
  Off{
      turnDimmer(Integer lightval) /{setBrightness(lightval)} -> Off;
      flipSwitch -> Dimmed;
  }
  Dimmed{
    entry[dimmer > 99] -> On;
    flipSwitch -> Off;
        turnDimmer(Integer lightval) /{setBrightness(lightval)} -> Dimmed;
  }
  On{
    flipSwitch -> Off;
        turnDimmer(Integer lightval) /{setBrightness(lightval)} -> Dimmed;
  }
  }
}

class X9
{
  Integer brightness = 0;
  bulb
  {
    On {
      [brightness < 1] push -> Off;
    }
    Off {}
  }
}

class X10
{
  Integer brightness = 0;
  bulb
  {
    On {
      push [brightness < 1] -> Off;
    }
    Off {}
  }
}

class X11
{
  status
  {
    On
    {
      press -> Off;
    }
    
    Off 
    {
      do { keepDoing; } -> On;
    }
  }
}

class X12
{
  bulb
  {
    On {
      entry / {blahblah}
      entry / {blahblah2}
      exit / {blahblahexit}
    }
  }
}

class X14
{
  bulb
  {  
     On 
     { 
       flip -> Off;
     }
       Off 
     { 
       flip -> On; 
     }
  }

  AnotherBulb
  {  
     On 
     { 
       flip -> Off;
     }
       Off 
     { 
       flip -> On; 
     }
  }
}

class X15
{
  Integer brightness = 0;
  bulb
  {
    On {
      push [brightness < 1] / {blabla} -> Off;
    }
    Off {}
  }
}

class X3
{
  status {
    On {
      off -> Off;
      Play {
        p -> Pause;

      }
      Pause {
        p -> Play;
      }
    }
    Off {}
  }
}

statemachine S1
{
  On { push -> Off;}
  Off { push -> On; }
}

class X16
{
  fixture as S1;
}

class X17
{
  status {
    S1 {
      e1 -> S1A;
      S1A {
        e1 -> S1;
      }
    }
  }
}

class X18
{
  status
  {
    Off
    {
      turnOn -> On;
    }
    On
    {
      
      MotorIdle
      {
        flip -> MotorRunning; 
      }
      MotorRunning
      {
        flip -> MotorIdle;
      }
      
      ||
      
      FanIdle
      {
        flop -> FanRunning;  
      }
      
      FanRunning
      {
        flop -> FanIdle;
      }
      
      
    }
  
  }
}
