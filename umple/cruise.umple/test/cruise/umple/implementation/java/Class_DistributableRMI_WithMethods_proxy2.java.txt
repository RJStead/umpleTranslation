/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

package distributed.rmi.withMethods2;
import java.util.*;
import java.lang.Thread;
import java.rmi.RemoteException;
import java.io.Serializable;
import distributed.rmi.withMethods2.UmpleRuntime;
public class Microwave extends CC implements java.io.Serializable
{  public void setRealObject(IMicrowaveImpl aObject)
  {
  super.setRealObject(aObject);
    realObject=aObject;
  }

  IMicrowaveImpl realObject;
  public Microwave(UmpleRuntime.UmpleComponent component)
  {
    if(this.getClass()== Microwave.class)    setRealObject(UmpleRuntime.getInstance().newMicrowave(component, this));
  }
  public Microwave()
  {
    if(this.getClass()== Microwave.class)    setRealObject(UmpleRuntime.getInstance().newMicrowave(this));
  }
  public void setSelf(Microwave proxy)
  {
    while(true)
      try{
        realObject.setSelf(proxy);
        break;
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public int getHashCode()
  {
    while(true)
      try{
        return realObject.getHashCode();
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public boolean setLightOn(boolean aLightOn)
  {
    while(true)
      try{
        return realObject.setLightOn(aLightOn);
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public boolean setPowerTubeOn(boolean aPowerTubeOn)
  {
    while(true)
      try{
        return realObject.setPowerTubeOn(aPowerTubeOn);
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public boolean setIsDoorOpened(boolean aIsDoorOpened)
  {
    while(true)
      try{
        return realObject.setIsDoorOpened(aIsDoorOpened);
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public boolean setIsButtonPressed(boolean aIsButtonPressed)
  {
    while(true)
      try{
        return realObject.setIsButtonPressed(aIsButtonPressed);
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public boolean getLightOn()
  {
    while(true)
      try{
        return realObject.getLightOn();
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public boolean getPowerTubeOn()
  {
    while(true)
      try{
        return realObject.getPowerTubeOn();
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public boolean getIsDoorOpened()
  {
    while(true)
      try{
        return realObject.getIsDoorOpened();
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public boolean getIsButtonPressed()
  {
    while(true)
      try{
        return realObject.getIsButtonPressed();
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public boolean _doorOpened()
  {
    while(true)
      try{
        return realObject._doorOpened();
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public boolean _buttonPressed()
  {
    while(true)
      try{
        return realObject._buttonPressed();
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public boolean _doorClosed()
  {
    while(true)
      try{
        return realObject._doorClosed();
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public void delete()
  {
    while(true)
      try{
        realObject.delete();
        break;
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public void doorOpened ()
  {
    while(true)
      try{
        realObject.doorOpened();
        break;
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public void buttonPressed ()
  {
    while(true)
      try{
        realObject.buttonPressed();
        break;
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public void doorClosed ()
  {
    while(true)
      try{
        realObject.doorClosed();
        break;
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
  public void run ()
  {
    while(true)
      try{
        realObject.run();
        break;
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
   public void turnLightOn(boolean on)
  {
    while(true)
      try{
        realObject.turnLightOn(on);
        break;
        }
    catch(Exception e) {System.err.println(e.toString());}
  }
   public static  void someMethod()
  {
    while(true)
      try{
        MicrowaveImpl.someMethod();
        }
    catch(Exception e) {System.err.println(e.toString());}
  }

  public boolean equals(Object obj)
  {    if(obj.getClass()!=this.getClass())
      return false;
    return (getHashCode()==((Microwave)obj).getHashCode());
  }
}