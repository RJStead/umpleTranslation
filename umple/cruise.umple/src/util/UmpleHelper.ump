/*

Copyright: All contributers to the Umple Project

This file is made available subject to the open source license found at:
http://umple.org/license

Helper classes that re needed by the Umple system, but are not key to understanding the metamodel

*/


namespace cruise.umple.compiler;

//Describes the interface for each code generating class to implement
// TODO: These classes - should be refactored out
interface ILang
{
  public String getCode(UmpleModel model, UmpleElement uElement);
}

class UncaughtException
{
  String uncaughtClassName;
  String uncaughtMethodName;
  String[] uncaughtFileName;
  Integer[] uncaughtUmpleLine;
  Integer[] uncaughtJavaLine;
  Integer[] uncaughtLength;
  
  public String toString()
  {
    StringBuilder builder = new StringBuilder();
    builder.append("    public UmpleSourceData ");
    builder.append(uncaughtClassName);
    builder.append("_");
    builder.append(uncaughtMethodName);
    builder.append("(){ return new UmpleSourceData().setFileNames(\"");
    String filename = uncaughtFileName.toString().replace("\"","").replace(", ","\",\"");
    if(filename.contains("/"))
    filename = filename.substring(filename.lastIndexOf("/") + 1);
    builder.append(filename.substring(1,filename.length()-1));
    builder.append("\").setUmpleLines(");    
    String line = uncaughtUmpleLine.toString();
    builder.append(line.substring(1,line.length()-1));
    builder.append(").setJavaLines(");
    String javaline = uncaughtJavaLine.toString();
    builder.append(javaline.substring(1,javaline.length()-1));
    builder.append(").setLengths(");
    String length = uncaughtLength.toString();
    builder.append(length.substring(1,length.length()-1));
    builder.append(");}");
    return builder.toString();
  }
}

// TODO: Users of this can most likely just use File, so this could be refactored out
class UmpleFile
{
  depend java.io.*;
  depend cruise.umple.compiler.exceptions.*;

  internal File file;
  // list of command-based linked Umple files
  internal String linkedFiles="";
}

class UmpleParserFactory
{
 
}

use util/UmpleHelper_Code.ump;