/*

Copyright: All contributers to the Umple Project

This file is made available subject to the open source license found at:
http://umple.org/license

This file is used to generate the diagram found at
http://umple.org/umple-compiler-classDiagram.shtml

To regenerate that diagram, compile this
Then move DiagramMastercd.gv to ../../umplewww
Then compile the result in umplewww with dot -Tsvg DiagramMastercd.gv -o Mastercd.svg
On the server Mastercd.sv needs to be placed in the umple.org directory
along with the user manual files

@outputumplesource
*/
generate GvClassDiagram "DiagramMaster.gv" --override-all;

// Activated in DiagramCoreMaster.ump
mixset CoreClassesOnly {
  filter {
    include UmpleModel, UmpleClass, UmpleAssociation, UmpleInterface;
    hops {
      association 1;
      sub 5;
    }
  }
}

// Activated in DiagramStateMaster.gv
mixset StateClassesOnly {
  filter {
    include StateMachine, State, Transition;
    hops {
      association 1;
      sub 2;}
  }
}

// Default filter, will show almost everything (attempts to show everything result in a
// graph that won't properly display by graphViz.
filter {
  include UmpleInternalParser, UmpleClass, CodeGeneratorWithSubptions, BasicExpression;
  hops {
    association 999;
  }
  hops {
    sub 10;
  }
}


use Master.ump;

// Pink for core Umple classes for parsing and the model
class UmpleInternalParser {displayColor "#FFCCCC";}
interface UmpleParser {displayColor "#FFCCCC";}
class Parser {displayColor "#FFCCCC";}
class Rule {displayColor "#FFCCCC";}
class Couple {displayColor "#FFCCCC";}
class Position {displayColor "#FFCCCC";}
class RulePartValue {displayColor "#FFCCCC";}
class RulePart {displayColor "#FFCCCC";}
class RuleInstance {displayColor "#FFCCCC";}
class Token {displayColor "#FFCCCC";}
class ErrorType {displayColor "#FFCCCC";}
class ErrorTypeSingleton {displayColor "#FFCCCC";}
class ErrorMessage {displayColor "#FFCCCC";}
class ParseResult {displayColor "#FFCCCC";}
class UmpleConsoleMain {displayColor "#FFCCCC";}
class PlaygroundMain {displayColor "#FFCCCC";}

// Yellow for Classifiers, classes etc.
class UmpleModel {displayColor "#FFEEAA";}
class UmpleInterface {displayColor "#FFEEAA";}
class UmpleClassifier {displayColor "#FFEEAA";}
class UmpleElement {displayColor "#FFEEAA";}
class AssociationClass {displayColor "#FFEEAA";}
class UmpleClass {displayColor "#FFEEAA";}

// Green for things to do with associations and attributes
class Association {displayColor "#AAFFAA";}
class AssociationEnd {displayColor "#AAFFAA";}
class Multiplicity {displayColor "#AAFFAA";}

class UmpleVariable {displayColor "#99EE99";}
class AssociationVariable {displayColor "#99EE99";}
class MethodParameter {displayColor "#99EE99";}
class Attribute {displayColor "#99EE99";}
class Constant {displayColor "#99EE99";}

// Blue for things to do with state machines
class State {displayColor "#BBDDFF";}
class StateMachine {displayColor "#BBDDFF";}
class Event {displayColor "#BBDDFF";}
class Action {displayColor "#BBDDFF";}
class Activity {displayColor "#BBDDFF";}
class Transition {displayColor "#BBDDFF";}
class Guard {displayColor "#BBDDFF";}

// Violet for diagram stuff
class Documenter {displayColor "#FFCCEE";}
class ContentParser {displayColor "#FFCCEE";}
class Group {displayColor "#FFCCEE";}
class Content {displayColor "#FFCCEE";}


// Orange for Trace stuff
class TraceDirective {displayColor "#FFCC77";}
class TraceCase {displayColor "#FFCC77";}
class TraceRecord {displayColor "#FFCC77";}
class TraceCondition {displayColor "#FFCC77";}
class StateMachineTraceItem {displayColor "#FFCC77";}
class AttributeTraceItem {displayColor "#FFCC77";}
class MethodTraceItem {displayColor "#FFCC77";}
class TraceDirective {displayColor "#FFCC77";}
class TraceItem {displayColor "#FFCC77";}
class ConditionRhs {displayColor "#FFCC77";}

// Grey for methods and code injections
class Method {displayColor "#EEEEEE";}
class MethodBody {displayColor "#EEEEEE";}
class CodeInjection {displayColor "#EEEEEE";}
class CodeBlock {displayColor "#EEEEEE";}
