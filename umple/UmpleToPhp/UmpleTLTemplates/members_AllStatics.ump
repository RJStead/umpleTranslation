class UmpleToPhp {
    members_AllStatics <<!<</*members_AllStatics*/>><<#
{
  isFirst = true;
  for(Attribute av : uClass.getAttributes())
  {
  
    if (!av.isConstant() && !av.getIsAutounique() && !av.getIsUnique())
    {
      continue;
    }

    if (isFirst)
    {
      appendln(realSb, "");
      appendln(realSb, "");
      appendln(realSb, "  //------------------------");
      appendln(realSb, "  // STATIC VARIABLES");
      appendln(realSb, "  //------------------------");
      isFirst = false;
    }
  
    if (av.isConstant())
    {
      appendln(realSb, "");
      if(av.getIsList())
      {
        append(realSb, "  public static ${0} = array({1});", av.getName(), gen.translate("parameterValue",av));
      }
      else
      {
        append(realSb, "  public static ${0} = {1};", av.getName(), gen.translate("parameterValue",av));
      }
      
    }
    else if (av.getIsAutounique())
    {
      String defaultValue = av.getValue() == null ? "1" : av.getValue();
      appendln(realSb, "");
      append(realSb, "  private static $next{0} = {1};", av.getUpperCaseName(), defaultValue);
    }
    else if (av.getIsUnique())
    {
      appendln(realSb, "");
      append(realSb, "  private static ${0} = array();", gen.translate("uniqueMap", av));
    }
  }
  
  if (uClass.getIsSingleton())
  {
    if (isFirst)
    {
      appendln(realSb, "");
      appendln(realSb, "");
      appendln(realSb, "  //------------------------");
      appendln(realSb, "  // STATIC VARIABLES");
      appendln(realSb, "  //------------------------");
      isFirst = false;
    }
    appendln(realSb, "");
    append(realSb, "  private static $theInstance = null;");
  }
}
#>>!>>
}
