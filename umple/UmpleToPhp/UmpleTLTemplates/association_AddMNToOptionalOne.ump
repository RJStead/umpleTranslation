class UmpleToPhp {
    association_AddMNToOptionalOne <<!<</*association_AddMNToOptionalOne*/>>
  public function <<=gen.translate("addMethod",av)>>($<<=gen.translate("parameterOne",av)>>)
  {
    $wasAdded = false;
    <<# if (customAddPrefixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPrefixCode, "    ")); } #>>
<<# if (!av.isStar()) { #>>
    if ($this-><<=gen.translate("numberOfMethod",av)>>() >= self::<<=gen.translate("maximumNumberOfMethod",av)>>())
    {
      <<# if (customAddPostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "      ")); } #>>
      return $wasAdded;
    }
<<# } #>>
    $<<=gen.relatedTranslate("parameterExisting",av)>> = $<<=gen.translate("parameterOne",av)>>-><<=gen.relatedTranslate("getMethod",av)>>();
    if ($<<=gen.relatedTranslate("parameterExisting",av)>> != null && $<<=gen.relatedTranslate("parameterExisting",av)>>-><<=gen.translate("numberOfMethod",av)>>() <= self::<<=gen.translate("minimumNumberOfMethod",av)>>())
    {
      <<# if (customAddPostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "      ")); } #>>
      return $wasAdded;
    }
    else if ($<<=gen.relatedTranslate("parameterExisting",av)>> != null)
    {
      unset($<<=gen.relatedTranslate("parameterExisting",av)>>-><<=gen.translate("associationMany",av)>>[$<<=gen.relatedTranslate("parameterExisting",av)>>-><<=gen.translate("indexOfMethod",av)>>($<<=gen.translate("parameterOne",av)>>)]);
      $<<=gen.relatedTranslate("parameterExisting",av)>>-><<=gen.translate("associationMany",av)>> = array_values($<<=gen.relatedTranslate("parameterExisting",av)>>-><<=gen.translate("associationMany",av)>>);
    }
    $this-><<=gen.translate("associationMany",av)>>[] = $<<=gen.translate("parameterOne",av)>>;
    $this-><<=gen.relatedTranslate("setMethod",av)>>($<<=gen.translate("parameterOne",av)>>,$this);
    $wasAdded = true;
    <<# if (customAddPostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "    ")); } #>>
    return $wasAdded;
  }

  public function <<=gen.translate("removeMethod",av)>>($<<=gen.translate("parameterOne",av)>>)
  {
    $wasRemoved = false;
    <<# if (customRemovePrefixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customRemovePrefixCode, "    ")); } #>>
    if ($this-><<=gen.translate("indexOfMethod",av)>>($<<=gen.translate("parameterOne",av)>>) != -1 && $this-><<=gen.translate("numberOfMethod",av)>>() > self::<<=gen.translate("minimumNumberOfMethod",av)>>())
    {
      unset($this-><<=gen.translate("associationMany",av)>>[$this-><<=gen.translate("indexOfMethod",av)>>($<<=gen.translate("parameterOne",av)>>)]);
      $this-><<=gen.translate("associationMany",av)>> = array_values($this-><<=gen.translate("associationMany",av)>>);
      $this-><<=gen.relatedTranslate("setMethod",av)>>($<<=gen.translate("parameterOne",av)>>,null);
      $wasRemoved = true;
    }
    <<# if (customRemovePostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customRemovePostfixCode, "    ")); } #>>
    return $wasRemoved;
  }
!>>
}
