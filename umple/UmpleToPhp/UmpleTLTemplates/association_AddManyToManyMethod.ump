class UmpleToPhp {
    association_AddManyToManyMethod <<!<</*association_AddManyToManyMethod*/>>
  public function <<=gen.translate("addMethod",av)>>($<<=gen.translate("parameterOne",av)>>)
  {
    $wasAdded = false;
    <<# if (customAddPrefixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPrefixCode, "    ")); } #>>
<<# if (!av.getMultiplicity().isUpperBoundMany()) { #>>
    if ($this-><<=gen.translate("numberOfMethod",av)>>() >= self::<<=gen.translate("maximumNumberOfMethod",av)>>())
    {
      <<# if (customAddPostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "      ")); } #>>
      return $wasAdded;
    }


<<# } #>>
    $this-><<=gen.translate("associationMany",av)>>[] = $<<=gen.translate("parameterOne",av)>>;
    if ($<<=gen.translate("parameterOne",av)>>-><<=gen.relatedTranslate("indexOfMethod",av)>>($this) != -1)
    {
      $wasAdded = true;
    }
    else
    {
      $wasAdded = $<<=gen.translate("parameterOne",av)>>-><<=gen.relatedTranslate("addMethod",av)>>($this);
      if (!$wasAdded)
      {
        array_pop($this-><<=gen.translate("associationMany",av)>>);
      }
    }
    <<# if (customAddPostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "      ")); } #>>
    return $wasAdded;
  }!>>
}
