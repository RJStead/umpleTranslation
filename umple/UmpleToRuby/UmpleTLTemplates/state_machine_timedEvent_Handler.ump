use state_machine_timedEvent_run.ump;


class UmpleToRuby {
    state_machine_timedEvent_Handler <<!<</*state_machine_timedEvent_Handler*/>><<#
 

#>>
  public static class TimedEventHandler extends TimerTask  
  {
    private <<= gen.translate("type",uClass) >> controller;
    private String timeoutMethodName;
    private double howLongInSeconds;
    private Timer timer;
    
    public TimedEventHandler(<<= gen.translate("type",uClass) >> aController, String aTimeoutMethodName, double aHowLongInSeconds)
    {
      controller = aController;
      timeoutMethodName = aTimeoutMethodName;
      howLongInSeconds = aHowLongInSeconds;
      timer = new Timer();
      timer.schedule(this, (long)howLongInSeconds*1000);
    }
    
    def stop
      timer.cancel();
    end
    
    def run
<<#
  for(StateMachine sm : uClass.getStateMachines())
  {
    for (Event e : sm.getEvents())
    {
      if (e.getIsTimer())
      {
        #>><<@ UmpleToRuby.state_machine_timedEvent_run >><<#
      }
    }
  }
#>>
    end
  }
!>>
}
