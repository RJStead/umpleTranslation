class UmpleToRuby {
    association_AddOptionalNToOptionalOne <<!<</*association_AddOptionalNToOptionalOne*/>>
  def <<=gen.translate("addMethod",av)>>(<<=gen.translate("parameterOne",av)>>)
    was_added = false
    <<# if (customAddPrefixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPrefixCode, "    ")); } #>>
    if <<=gen.translate("numberOfMethod",av)>> >= <<=uClass.getName()>>.<<=gen.translate("maximumNumberOfMethod",av)>>
      <<# if (customAddPostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "      ")); } #>>
      return was_added
    end

    <<=gen.relatedTranslate("parameterExisting",av)>> = <<=gen.translate("parameterOne",av)>>.<<=gen.relatedTranslate("getMethod",av)>>
    if <<=gen.relatedTranslate("parameterExisting",av)>>.nil?
      <<=gen.translate("parameterOne",av)>>.<<=gen.relatedTranslate("setMethod",av)>>(self)
    elsif !<<=gen.relatedTranslate("parameterExisting",av)>>.eql?(self)
      <<=gen.relatedTranslate("parameterExisting",av)>>.<<=gen.translate("removeMethod",av)>>(<<=gen.translate("parameterOne",av)>>)
      <<=gen.translate("addMethod",av)>>(<<=gen.translate("parameterOne",av)>>)
    else
      @<<=gen.translate("associationMany",av)>> << <<=gen.translate("parameterOne",av)>>
    end
    was_added = true
    <<# if (customAddPostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "    ")); } #>>
    was_added
  end

  def <<=gen.translate("removeMethod",av)>>(<<=gen.translate("parameterOne",av)>>)
    was_removed = false
    <<# if (customRemovePrefixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customRemovePrefixCode, "    ")); } #>>
    if @<<=gen.translate("associationMany",av)>>.include?(<<=gen.translate("parameterOne",av)>>)
      @<<=gen.translate("associationMany",av)>>.delete(<<=gen.translate("parameterOne",av)>>)
      <<=gen.translate("parameterOne",av)>>.<<=gen.relatedTranslate("setMethod",av)>>(nil)
      was_removed = true
    end
    <<# if (customRemovePostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customRemovePostfixCode, "    ")); } #>>
    was_removed
  end
!>>
}
