class UmpleToRuby {
    association_AddUnidirectionalMStar <<!<</*association_AddUnidirectionalMStar*/>>
  def <<=gen.translate("addMethod",av)>>(<<=gen.translate("parameterOne",av)>>)
    was_added = false
    <<# if (customAddPrefixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPrefixCode, "    ")); } #>>
    @<<=gen.translate("associationMany",av)>> << <<=gen.translate("parameterOne",av)>>
    was_added = true
    <<# if (customAddPostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "    ")); } #>>
    was_added
  end

  def <<=gen.translate("removeMethod",av)>>(<<=gen.translate("parameterOne",av)>>)
    was_removed = false
    <<# if (customRemovePrefixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customRemovePrefixCode, "    ")); } #>>
    unless @<<=gen.translate("associationMany",av)>>.include?(<<=gen.translate("parameterOne",av)>>)
      <<# if (customRemovePostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customRemovePostfixCode, "      ")); } #>>
      return was_removed
    end

    if <<=gen.translate("numberOfMethod",av)>> <= <<=uClass.getName()>>.<<=gen.translate("minimumNumberOfMethod",av)>>
      <<# if (customRemovePostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customRemovePostfixCode, "      ")); } #>>
      return was_removed
    end

    @<<=gen.translate("associationMany",av)>>.delete(<<=gen.translate("parameterOne",av)>>)
    was_removed = true
    <<# if (customRemovePostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customRemovePostfixCode, "    ")); } #>>
    was_removed
  end
!>>
}
