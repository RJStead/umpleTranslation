class UmpleToRuby {
    association_GetOne <<!<</*association_GetOne*/>>
  def <<=gen.translate("getMethod",av)>>
    <<# if (customGetPrefixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customGetPrefixCode, "    ")); } #>>
<<# if (customGetPostfixCode == null) { #>>
    @<<=gen.translate("associationOne",av)>>
<<# } else { #>>
    <<=gen.translate("parameterOne",av)>> = @<<=gen.translate("associationOne",av)>>
    <<# append(realSb, "\n{0}",GeneratorHelper.doIndent(customGetPostfixCode, "    ")); #>>
    <<# if (customGetPostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customGetPostfixCode, "    ")); } #>>
    <<=gen.translate("parameterOne",av)>>
<<# } #>>
  end<<# 
  if(av.getMultiplicity().getLowerBound() == 0) {
  #>>

  def <<=gen.translate("hasMethod",av)>>
    has = !@<<=gen.translate("associationOne",av)>>.nil?
    has
  end
<<# } #>>
!>>
}
