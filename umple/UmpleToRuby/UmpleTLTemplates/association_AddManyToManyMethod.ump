class UmpleToRuby {
    association_AddManyToManyMethod <<!<</*association_AddManyToManyMethod*/>>
  def <<=gen.translate("addMethod",av)>>(<<=gen.translate("parameterOne",av)>>)
    was_added = false
    <<# if (customAddPrefixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPrefixCode, "    ")); } #>>
<<# if (!av.getMultiplicity().isUpperBoundMany()) { #>>
    if <<=gen.translate("numberOfMethod",av)>> >= <<=uClass.getName()>>.<<=gen.translate("maximumNumberOfMethod",av)>>
      <<# if (customAddPostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "      ")); } #>>
      return was_added
    end


<<# } #>>
    @<<=gen.translate("associationMany",av)>> << <<=gen.translate("parameterOne",av)>>
    if <<=gen.translate("parameterOne",av)>>.<<=gen.relatedTranslate("indexOfMethod",av)>>(self) != -1
      was_added = true
    else
      was_added = <<=gen.translate("parameterOne",av)>>.<<=gen.relatedTranslate("addMethod",av)>>(self)
      unless was_added
        @<<=gen.translate("associationMany",av)>>.delete(<<=gen.translate("parameterOne",av)>>)
      end
    end
    <<# if (customAddPostfixCode != null) { append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "    ")); } #>>
    was_added
  end!>>
}
