use attribute_IsBoolean.ump;
use attribute_IsBooleanCodeInjection.ump;
use attribute_IsBooleanCodeInjectionDerived.ump;
use attribute_IsBooleanDerived.ump;


class UmpleToRuby {
    attribute_IsBoolean_All <<!<</*attribute_IsBoolean_All*/>><<#
  // GENERIC FILE - EDIT IN UmpleToTemplate project, then run "ant -f build.codegen.xml to move into the appropriate projects
  for (Attribute av : uClass.getAttributes()) 
  {
    if (!av.getType().equals("Boolean") || av.getIsAutounique() || av.isConstant() || "internal".equals(av.getModifier()))
    {
      continue;
    }
  
    gen.setParameterConstraintName(av.getName());

    List<TraceItem> traceItems = av.getTraced("getMethod", uClass);

    String customGetPrefixCode = GeneratorHelper.toCode(gen.getApplicableCodeInjections(uClass, "before", "isMethod", av));
    String customGetPostfixCode = GeneratorHelper.toCode(gen.getApplicableCodeInjections(uClass, "after", "isMethod", av));
    
    if (av.getIsDerived() && customGetPostfixCode != null)
    {
      #>><<@ UmpleToRuby.attribute_IsBooleanCodeInjectionDerived >><<#
    }
    else if (av.getIsDerived())
    {
      #>><<@ UmpleToRuby.attribute_IsBooleanDerived >><<#
    }
    else if (customGetPostfixCode != null)
    {
      #>><<@ UmpleToRuby.attribute_IsBooleanCodeInjection >><<#
    }
    else
    {
      #>><<@ UmpleToRuby.attribute_IsBoolean >><<#
    }
      
    appendln(realSb, "");
  }
  gen.setParameterConstraintName("");
#>>!>>
}
