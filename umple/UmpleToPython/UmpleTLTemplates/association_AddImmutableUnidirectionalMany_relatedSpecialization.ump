class UmpleToJava {
  association_AddImmutableUnidirectionalMany_relatedSpecialization <<!  /* Code from template association_AddImmutableUnidirectionalMany_relatedSpecialization */
<</*association_AddImmutableUnidirectionalMany_relatedSpecialization*/>>  private boolean <<=gen.translate("addMethod",av)>>(<<=gen.translate("type",av)>> <<=gen.translate("parameterOne",av)>>)
  {
    boolean wasAdded = false;
    <<# if (customAddPrefixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customAddPrefixCode,gen.translate("addMethod",av));
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPrefixCode, "    ")); } #>>
    <<= gen.translate("attributeCanSet",av) >> = false;
<<#for( TraceItem traceItemAssocAdd : traceItemAssocAdds )#>><<= (traceItemAssocAdd!=null&&traceItemAssocAdd.getIsPre()?traceItemAssocAdd.trace(gen, av,"as_a", uClass,gen.translate("numberOfMethod",av)+"()")+"\n":"")
>>    <<=gen.translate("associationMany",av)>>.add(<<=gen.translate("parameterOne",av)>>);
    wasAdded = true;
<<#for( TraceItem traceItemAssocAdd : traceItemAssocAdds )#>><<= (traceItemAssocAdd!=null&&traceItemAssocAdd.getIsPost()?traceItemAssocAdd.trace(gen, av,"as_a", uClass,gen.translate("numberOfMethod",av)+"()")+"\n":"")
>>    <<# if (customAddPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customAddPostfixCode,gen.translate("addMethod",av));
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "    ")); } #>>
    return wasAdded;
  }
  !>>
}
