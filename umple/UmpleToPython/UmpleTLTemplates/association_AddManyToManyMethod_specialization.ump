class UmpleToJava {
  association_AddManyToManyMethod_specialization <<!  /* Code from template association_AddManyToManyMethod_specialization */
<</*association_AddManyToManyMethod_specialization*/>>  public boolean <<=gen.translate("addMethod",av)>>(<<=gen.translate("type",av)>> <<=gen.translate("parameterOne",av)>>)
  {
    boolean wasAdded = false;
    <<# if (customAddPrefixCode != null && av.getMultiplicity().getUpperBound() == 1) { #>>
    <<=gen.translate("type",av)>> <<=gen.translate("associationOne",av)>> = <<=gen.translate("getMethod",av)>>(<<#if (mulChangedToOne) { #>>0 <<# } #>>);
    <<# } else if (customAddPrefixCode != null) { #>>
   List<<<=gen.translate("type",av)>>> <<=gen.translate("associationMany",av)>> = <<=gen.translate("getManyMethod",av)>>_<<=gen.translate("type",av)>>(); 
    <<# } #>>
    <<# if (customAddPrefixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customAddPrefixCode,gen.translate("addMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPrefixCode, "    ")); } #>>
<<# if (!av.getMultiplicity().isUpperBoundMany()) { #>>
    if (<<=gen.translate("numberOfMethod",av)>>() >= <<=gen.translate("maximumNumberOfMethod",av)>>_<<=gen.translate("type",av)>>())
    {
      <<# if (customAddPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customAddPostfixCode,gen.translate("addMethod",av)); 
      append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "      ")); } #>>
      return wasAdded;
    }
<<# } #>>
    wasAdded = super.<<=gen.translate("addMethod",av)>>(<<=gen.translate("parameterOne",av)>>);

    
<<# if (customAddPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customAddPostfixCode,gen.translate("addMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customAddPostfixCode, "    ")); } #>>
    return wasAdded;
  }!>>
}
