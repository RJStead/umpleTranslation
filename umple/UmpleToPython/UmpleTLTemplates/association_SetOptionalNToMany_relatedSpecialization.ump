class UmpleToJava {
  association_SetOptionalNToMany_relatedSpecialization <<!  /* Code from template association_SetOptionalNToMany_relatedSpecialization */
<</*association_SetOptionalNToMany_relatedSpecialization*/>>  public boolean <<=gen.translate("setManyMethod",av)>>_<<=gen.translate("type",av)>>(<<=gen.translate("type",av)>>... <<=gen.translate("parameterMany",av)>>)
  {
    boolean wasSet = false;
    <<# if (customSetManyPrefixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetManyPrefixCode,gen.translate("setManyMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetManyPrefixCode, "    ")); } #>>
    ArrayList<<<=gen.translate("type",av)>>> <<=gen.translate("parameterVerifiedMany",av)>> = new ArrayList<<<=gen.translate("type",av)>>>();
    for (<<=gen.translate("type",av)>> <<=gen.translate("parameterOne",av)>> : <<=gen.translate("parameterMany",av)>>)
    {
      if (<<=gen.translate("parameterVerifiedMany",av)>>.contains(<<=gen.translate("parameterOne",av)>>))
      {
        continue;
      }
      <<=gen.translate("parameterVerifiedMany",av)>>.add(<<=gen.translate("parameterOne",av)>>);
    }

    if (<<=gen.translate("parameterVerifiedMany",av)>>.size() != <<=gen.translate("parameterMany",av)>>.length || <<=gen.translate("parameterVerifiedMany",av)>>.size() > <<=gen.translate("maximumNumberOfMethod",av)>>_<<=gen.translate("type",av)>>())
    {
      <<# if (customSetManyPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetManyPostfixCode,gen.translate("setManyMethod",av)); 
      append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetManyPostfixCode, "      ")); } #>>
      return wasSet;
    }

    ArrayList<<<=gen.translate("type",av)>>> <<=gen.translate("parameterOldMany",av)>> = new ArrayList<<<=gen.translate("type",av)>>>(<<=gen.translate("getMethod",av)>>_<<=gen.translate("type",av)>>());
    <<=gen.translate("associationMany",av)>>.clear();
    for (<<=gen.translate("type",av)>> <<=gen.translate("parameterNew",av)>> : <<=gen.translate("parameterVerifiedMany",av)>>)
    {
      <<=gen.translate("associationMany",av)>>.add(<<=gen.translate("parameterNew",av)>>);
      if (<<=gen.translate("parameterOldMany",av)>>.contains(<<=gen.translate("parameterNew",av)>>))
      {
        <<=gen.translate("parameterOldMany",av)>>.remove(<<=gen.translate("parameterNew",av)>>);
      }
      else
      {
        <<=gen.translate("parameterNew",av)>>.<<=gen.relatedTranslate("addMethod",av)>>(this);
      }
    }

    for (<<=gen.translate("type",av)>> <<=gen.translate("parameterOld",av)>> : <<=gen.translate("parameterOldMany",av)>>)
    {
      <<=gen.translate("parameterOld",av)>>.<<=gen.relatedTranslate("removeMethod",av)>>(this);
    }
    wasSet = true;
    <<# if (customSetManyPrefixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetManyPostfixCode,gen.translate("setManyMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetManyPrefixCode, "    ")); } #>>
    return wasSet;
  }
!>>
}
